---
- name: 진단 및 조치 - NFS 서비스 비활성화
  hosts: target_servers
  become: yes
  gather_facts: yes

  # 1. 변수 정의
  vars:
    # 조치 시 비활성화할 NFS 관련 서비스 이름 목록
    nfs_service_names:
      - nfs-server
      - nfs-kernel-server
      - nfs

    # 보고서 관련 변수
    playbook_name: "1_1_24_nfs_service_disable.yml"
    remediation_tasks_performed: []

  tasks:
    # 2. 진단
    # nfsd 프로세스가 실행 중인지 확인
    - name: NFS 데몬(nfsd) 실행 여부 진단
      ansible.builtin.shell: "ps -ef | grep '[n]fsd'"
      register: nfs_process_check
      changed_when: false
      failed_when: false

    # 진단 결과에 따라 취약 여부 변수 설정
    - name: 취약 여부 종합 판단
      ansible.builtin.set_fact:
        # grep 명령어의 리턴 코드가 0이면(프로세스를 찾으면) '취약'
        is_vulnerable: "{{ nfs_process_check.rc == 0 }}"
        report_timestamp: "{{ ansible_date_time.iso8601 }}"

    # 3. 진단 결과 보고
    - name: 진단 결과 콘솔 출력
      ansible.builtin.debug:
        msg: "진단결과: {% if is_vulnerable %}취약 (NFS 서비스 활성화됨){% else %}양호{% endif %}"

    - name: 초기 JSON 보고서 생성 및 저장
      ansible.builtin.copy:
        content: |
          {{
            {
              "playbook_name": playbook_name,
              "task_description": "NFS 서비스 비활성화",
              "diagnosis_result": "취약" if is_vulnerable else "양호",
              "is_vulnerable": is_vulnerable,
              "timestamp": report_timestamp,
              "hostname": inventory_hostname,
              "vulnerability_details": {
                "reason": "NFS 서비스 데몬(nfsd)이 실행 중입니다." if is_vulnerable else "NFS 서비스가 비활성화되어 있습니다."
              }
            } | to_nice_json
          }}
        dest: "{{ result_json_path }}"
        mode: '0644'
      delegate_to: localhost
      become: false

    # 4. 조치
    # 가능한 모든 NFS 서비스 이름에 대해 중지 및 비활성화 시도
    - name: NFS 서비스 비활성화 및 중지
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: no
        state: stopped
      loop: "{{ nfs_service_names }}"
      register: service_remediation
      when: is_vulnerable
      ignore_errors: true # 목록에 없는 서비스는 오류를 무시

    # 5. 조치 결과 보고
    - name: 수행된 조치 작업 기록
      ansible.builtin.set_fact:
        remediation_done: "{{ service_remediation.results | selectattr('changed', 'equalto', true) | list | length > 0 }}"
        remediation_tasks_performed: "{{ ['NFS 서비스 비활성화/중지'] if (service_remediation.results | selectattr('changed', 'equalto', true) | list | length > 0) else [] }}"
      when: is_vulnerable

    - name: 최종 JSON 보고서에 조치 결과 추가 및 저장
      ansible.builtin.copy:
        content: |
          {{
            (lookup('file', result_json_path) | from_json) | combine({
              'remediation_applied': remediation_done | default(false),
              'remediation_result': '조치 완료' if (remediation_done | default(false)) else '조치 실패',
              'remediation_timestamp': report_timestamp,
              'remediation_tasks_performed': remediation_tasks_performed | default([])
            }, recursive=True) | to_nice_json
          }}
        dest: "{{ result_json_path }}"
        mode: '0644'
      delegate_to: localhost
      become: false
      when: not ansible_check_mode and is_vulnerable