---
# 플레이북 이름: 상용 메신저 사용 금지 점검 및 조치
# 설명: 시스템에 상용 메신저 프로세스가 실행 중인지 확인하고, 실행 중인 경우 사용 중지를 권고합니다.
- name: 상용 메신저 사용 금지 점검 및 조치
  hosts: localhost # 로컬 시스템(현재 실행 중인 호스트)을 대상으로 합니다.
  become: yes      # 관리자 권한(sudo)으로 태스크를 실행합니다. (프로세스 확인 및 kill을 위함)

  vars:
    # 감지할 상용 메신저 관련 키워드 (대소문자 무시)
    messenger_keywords:
      - kakao # 카카오톡
      - nate # 네이트온 (구버전일 수 있음)
      - telegram # 텔레그램
      - line # 라인
      - wechat # 위챗
      - discord # 디스코드 (필요시 추가)
      - slack # 슬랙 (필요시 추가)

  tasks:
    # --- 1. 진단 섹션 시작 ---

    - name: 진단 결과 초기화
      ansible.builtin.set_fact:
        diagnosis_results:
          status: "양호"
          reasons: []
          found_messengers: [] # 감지된 메신저 이름/키워드 리스트
          needs_fix: false

    - name: 실행 중인 상용 메신저 프로세스 확인
      ansible.builtin.shell: "ps -ef | egrep -i '{{ messenger_keywords | join(\"|\") }}' | grep -v 'egrep' | grep -v 'ansible_managed' || true"
      # '|| true'는 grep 결과가 없어도 실패로 처리되지 않도록 함
      # 'grep -v 'egrep''는 자신의 grep 프로세스를 제외
      # 'grep -v 'ansible_managed''는 Ansible 관련 프로세스 제외
      register: messenger_processes
      changed_when: false

    - name: 진단 결과 업데이트 (상용 메신저 감지)
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{ diagnosis_results | combine({
              'status': '취약',
              'reasons': diagnosis_results.reasons + ['다음 상용 메신저 관련 프로세스가 실행 중입니다.'],
              'found_messengers': (messenger_processes.stdout_lines | default([]) | select('match', '(?i).*(' + messenger_keywords | join('|') + ').*') | list),
              'needs_fix': true
            })
          }}
      when: messenger_processes.stdout | length > 0

    - name: 최종 진단 결과 출력
      ansible.builtin.debug:
        msg: |
          <진단 결과: {{ diagnosis_results.status }}>
          {% if diagnosis_results.found_messengers | length > 0 %}
            감지된 상용 메신저 관련 프로세스:
            {% for line in diagnosis_results.found_messengers %}
              - {{ line | truncate(100, True, '...') }}
            {% endfor %}
            세부 사유:
            {% for reason in diagnosis_results.reasons %}
              - {{ reason }}
            {% endfor %}
            조치 권고:
            {% if diagnosis_results.needs_fix %}
              - 감지된 상용 메신저 애플리케이션을 시스템에서 **삭제**하십시오.
              - 실행 중인 메신저 프로세스가 있다면, `kill -9 [PID]` 명령으로 강제 종료하거나, 해당 애플리케이션을 종료하십시오. (예: `sudo killall -9 kakao`)
              - 시스템의 보안 정책에 따라 상용 메신저 설치를 금지하고 주기적으로 점검하십시오.
            {% endif %}
          {% else %}
            현재 시스템에서 상용 메신저 관련 프로세스가 감지되지 않았습니다.
            보안 설정이 양호합니다.
          {% endif %}
      when: diagnosis_results is defined

    # --- 2. 조치 섹션 시작 (자동 조치는 신중하게 접근) ---
    # 상용 메신저의 경우, 사용자의 데이터를 손상시키거나 예기치 않은 문제를 일으킬 수 있어
    # 자동 삭제는 권장되지 않습니다. 여기서는 실행 중인 프로세스 강제 종료를 예시로 들고,
    # 삭제는 수동으로 진행하도록 안내합니다.

    - name: 감지된 상용 메신저 프로세스 강제 종료 (선택적 자동 조치)
      ansible.builtin.shell: "pkill -9 -f '{{ item }}'"
      loop: "{{ messenger_keywords }}"
      when:
        - diagnosis_results.needs_fix # 취약으로 진단된 경우에만 시도
        - diagnosis_results.status == '취약' # '취약' 상태일 때만
        - ansible_check_mode is not defined or ansible_check_mode == false # --check 모드가 아닐 때만 실행
      ignore_errors: true # 프로세스가 없어도 오류 발생 방지
      changed_when: true # 변경이 발생할 수 있으므로 항상 true로 설정
      # 이 태스크는 위험할 수 있으므로 신중하게 사용해야 합니다.
      # 실제 운영 환경에서는 사용자에게 통보 후 수동으로 종료하거나,
      # 서비스에 방해가 되지 않는 시간에 스케줄링하는 것을 권장합니다.

    - name: 상용 메신저 삭제는 수동으로 진행하도록 안내
      ansible.builtin.debug:
        msg: |
          **주의: 상용 메신저 애플리케이션 자체의 삭제는 자동으로 진행되지 않습니다.**
          사용자 데이터 손상 및 시스템 충돌 위험이 있으므로,
          감지된 메신저 앱은 수동으로 제거해 주십시오. (예: `sudo apt purge kakao` 또는 해당 앱의 삭제 가이드 참조)
      when: diagnosis_results.needs_fix and diagnosis_results.status == '취약'

