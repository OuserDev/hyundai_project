---
# 플레이북 이름: NFS 서비스 비활성화 점검 및 조치
# 설명: NFS 서비스 활성화로 인한 보안 취약점(비인가 접근, 파일 위변조)을 방지하기 위해
#       NFS 관련 데몬의 구동 여부를 진단하고, 활성화되어 있을 경우 비활성화 조치를 수행합니다.
- name: NFS 서비스 비활성화 점검 및 조치
  hosts: localhost # 로컬 시스템(현재 실행 중인 호스트)을 대상으로 합니다.
  become: yes      # 관리자 권한(sudo)으로 태스크를 실행합니다.

  vars:
    # NFS 관련 주요 데몬 목록을 정의합니다.
    # 운영체제 및 NFS 버전에 따라 데몬 이름이 다를 수 있으므로,
    # 필요에 따라 이 목록을 추가/수정할 수 있습니다.
    nfs_daemons:
      - nfs-server
      - nfsd
      - rpcbind
      - nfs-mountd
      - rpc-statd
      - rpc.mountd
      - rpc.statd

  tasks:
    # --- 1. 진단 섹션 시작 ---

    # 1.1. NFS 관련 각 데몬의 서비스 상태를 확인합니다.
    - name: NFS 데몬 ({{ item }}) 상태 확인
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started # 'active' 상태인지 확인합니다.
      register: daemon_status
      loop: "{{ nfs_daemons }}"
      loop_control:
        loop_var: item
      ignore_errors: true # 서비스가 없거나 비활성화되어 있어도 오류로 처리하지 않습니다.

    # 1.2. 진단 결과 초기화
    - name: 진단 결과 초기화
      ansible.builtin.set_fact:
        diagnosis_results:
          status: "양호"
          reasons: []
          active_nfs_daemons: [] # 활성화된 데몬 목록을 저장할 리스트

    # 1.3. 각 데몬의 상태를 기반으로 진단 로직을 적용합니다.
    - name: NFS 데몬 진단 로직 적용
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{
            diagnosis_results | combine({
              'status': '취약',
              'reasons': diagnosis_results.reasons + ['NFS 관련 데몬 "' + item.item + '"이(가) 활성화되어 있습니다.'],
              'active_nfs_daemons': diagnosis_results.active_nfs_daemons + [item.item]
            })
          }}
      loop: "{{ daemon_status.results }}"
      loop_control:
        loop_var: item
      when:
        - item.status is defined # 서비스 상태 정보가 있고
        - item.status.ActiveState == 'active' # 서비스가 활성화(active) 상태이며
        - item.skipped is not defined # 이 서비스 확인 태스크가 스킵되지 않았을 때

    # 1.4. 최종 진단 결과 출력
    - name: 최종 진단 결과 출력
      ansible.builtin.debug:
        msg: |
          <진단 결과: {{ diagnosis_results.status }}>
          {% if diagnosis_results.reasons | length > 0 %}
            세부 사유:
            {% for reason in diagnosis_results.reasons %}
              - {{ reason }}
            {% endfor %}
            조치 권고:
            - NFS 관련 데몬(nfs-server, rpcbind 등)을 비활성화하십시오.
            - 필요시 `systemctl stop <데몬명>` 및 `systemctl disable <데몬명>` 명령을 사용하십시오.
            - NFS 공유 디렉토리가 없는지 `showmount`, `exportfs` 등으로 확인 후 조치하십시오.
          {% else %}
            NFS 서비스 관련 데몬이 모두 비활성화되어 양호합니다.
          {% endif %}
      when: diagnosis_results is defined

    # --- 2. 조치 섹션 시작 ---
    # 조치: 활성화된 NFS 데몬들을 비활성화합니다.
    - name: 활성화된 NFS 데몬 비활성화 조치
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped  # 서비스 중지
        enabled: no     # 부팅 시 자동 시작 비활성화
      loop: "{{ diagnosis_results.active_nfs_daemons }}" # 진단 단계에서 활성화된 데몬 목록을 사용
      when:
        - ansible_check_mode is not defined # --check 모드가 아닐 때만 실제 조치 수행
        - diagnosis_results.active_nfs_daemons | length > 0 # 활성화된 데몬이 있을 때만 실행

    # 조치 완료 메시지 출력
    - name: 조치 완료 메시지
      ansible.builtin.debug:
        msg: "NFS 서비스 관련 데몬들에 대한 비활성화 조치를 시도했습니다. 시스템에서 변경사항을 확인해보십시오."
      when:
        - ansible_check_mode is not defined # --check 모드가 아닐 때만 출력
        - diagnosis_results.status == '취약' # 취약점이 발견되어 조치가 시도되었을 경우
