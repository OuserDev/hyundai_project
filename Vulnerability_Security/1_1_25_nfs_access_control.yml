---
# 플레이북 이름: NFS 접근통제 점검 및 조치
# 설명: NFS 서비스 사용 시 인증 절차 없이 비인가자 접근 및 중요 파일 위변조/유출 위험을 방지하기 위해
#       everyone(광범위) 공유 설정 여부를 진단하고, 필요시 이를 제거하는 조치를 수행합니다.
- name: NFS 접근통제 점검 및 조치
  hosts: localhost # 로컬 시스템(현재 실행 중인 호스트)을 대상으로 합니다.
  become: yes      # 관리자 권한(sudo)으로 태스크를 실행합니다.

  vars:
    exports_file: /etc/exports
    # everyone 공유를 의미하는 취약한 설정 패턴들을 정의합니다.
    # 1. 특정 경로에 * (모든 호스트)로 설정된 경우
    # 2. 특정 경로에 특정 대역과 함께 (ro,all_squash)와 같이 광범위하게 설정된 경우 (예시)
    #    (실제로는 * 이 가장 흔한 everyone 공유 패턴입니다.)
    vulnerable_exports_patterns:
      - '^\s*[^#].*\s*\*\s*(\(.*\))?\s*$' # 파일 경로 다음에 * 이 오는 경우 (예: /data *(rw))
      - '^\s*[^#].*\s*0\.0\.0\.0/0\s*(\(.*\))?\s*$' # 0.0.0.0/0 (모든 IP)로 설정된 경우
      # 추가적인 취약 패턴이 있다면 여기에 추가할 수 있습니다.
      # 진단 방법 예시에 나온 '/var/www/img        *(ro,all_squash)' 형태 포함

  tasks:
    # --- 1. 진단 섹션 시작 ---

    # 1.1. /etc/exports 파일의 상태를 확인합니다.
    - name: /etc/exports 파일 상태 확인
      ansible.builtin.stat:
        path: "{{ exports_file }}"
      register: exports_file_stat

    # 1.2. 진단 결과 초기화
    - name: 진단 결과 초기화
      ansible.builtin.set_fact:
        diagnosis_results:
          status: "양호"
          reasons: []
          vulnerable_lines: [] # 취약한 설정 라인을 저장할 리스트

    # 1.3. /etc/exports 파일이 존재할 경우 내용을 확인하고 진단 로직을 적용합니다.
    - name: /etc/exports 파일 내용 확인 및 취약점 진단
      ansible.builtin.shell: "grep -E '{{ item }}' {{ exports_file }} || true"
      args:
        warn: false # grep 실패 시 경고 메시지 방지
      register: grep_result
      loop: "{{ vulnerable_exports_patterns }}"
      when: exports_file_stat.stat.exists # /etc/exports 파일이 존재할 때만 실행

    - name: NFS 접근통제 진단 로직 적용
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{
            diagnosis_results | combine({
              'status': '취약',
              'reasons': diagnosis_results.reasons + ['/etc/exports 파일에 everyone 공유를 허용하는 광범위한 설정이 발견되었습니다: ' + item],
              'vulnerable_lines': (diagnosis_results.vulnerable_lines | default([])) + [item] # 취약한 라인 추가
            })
          }}
      loop: "{{ grep_result.results | map(attribute='stdout_lines') | flatten | unique }}" # grep 결과에서 중복 제거 후 반복
      loop_control:
        loop_var: item
      when:
        - exports_file_stat.stat.exists # 파일이 존재하고
        - item | length > 0 # grep 결과가 있을 경우 (매칭되는 라인이 발견된 경우)

    # 1.4. 최종 진단 결과 출력
    - name: 최종 진단 결과 출력
      ansible.builtin.debug:
        msg: |
          <진단 결과: {{ diagnosis_results.status }}>
          {% if diagnosis_results.reasons | length > 0 %}
            세부 사유:
            {% for reason in diagnosis_results.reasons %}
              - {{ reason }}
            {% endfor %}
            조치 권고:
            - `/etc/exports` 파일에서 everyone 공유를 허용하는 광범위한 설정을 제거하고, 특정 IP 또는 네트워크 대역만 허용하도록 변경하십시오.
            - 변경 후에는 `exportfs -ra` 명령을 실행하여 변경 사항을 적용하십시오.
          {% else %}
            NFS 서비스의 everyone 공유 제한 설정이 양호합니다.
          {% endif %}
      when: diagnosis_results is defined

    # --- 2. 조치 섹션 시작 ---
    # 조치: /etc/exports 파일에서 취약한 everyone 공유 설정을 제거합니다.
    # 주의: 이 조치는 해당 라인을 완전히 제거합니다. 신중하게 사용하십시오.
    - name: /etc/exports 파일에서 everyone 공유 설정 제거 (조치)
      ansible.builtin.lineinfile:
        path: "{{ exports_file }}"
        regexp: "{{ item }}" # 발견된 취약한 패턴을 정규식으로 사용하여 해당 라인을 제거
        state: absent # 해당 라인을 파일에서 제거합니다.
      loop: "{{ diagnosis_results.vulnerable_lines }}" # 진단 단계에서 찾은 취약한 라인들을 반복
      when:
        - ansible_check_mode is not defined # --check 모드가 아닐 때만 실제 조치 수행
        - diagnosis_results.status == '취약' # 취약점이 발견되어 조치가 필요한 경우
        - diagnosis_results.vulnerable_lines | length > 0 # 제거할 라인이 있을 때만 실행

    # 조치 후 exportfs -ra 실행 (변경 사항 적용)
    - name: exportfs -ra 실행하여 NFS 설정 변경 사항 적용
      ansible.builtin.command: "exportfs -ra"
      when:
        - ansible_check_mode is not defined # --check 모드가 아닐 때만 실행
        - diagnosis_results.status == '취약' # 취약점이 발견되어 조치가 시도되었을 경우
        - diagnosis_results.vulnerable_lines | length > 0 # 변경된 라인이 있을 때만 실행 (실제 변경이 있었을 경우)
      changed_when: true # command 모듈은 항상 changed 상태를 반환하도록 설정

    # 조치 완료 메시지 출력
    - name: 조치 완료 메시지
      ansible.builtin.debug:
        msg: "NFS everyone 공유에 대한 조치를 시도했습니다. /etc/exports 파일을 확인하고 필요한 경우 NFS 서비스를 재시작하십시오."
      when:
        - ansible_check_mode is not defined # --check 모드가 아닐 때만 출력
        - diagnosis_results.status == '취약' # 취약점이 발견되어 조치가 시도되었을 경우
