---
# 플레이북 이름: 비인가 무선랜 사용 금지 점검 및 조치
# 설명: 시스템의 무선랜 연결 상태 및 저장된 프로필을 진단하고, 필요시 무선랜 사용을 중지하며 비인가 기록 삭제를 권고합니다.
# 주의: 무선랜 드라이버 제거는 시스템의 무선 통신 기능을 완전히 제거하므로 신중하게 조치해야 합니다.
- name: 비인가 무선랜 사용 금지 점검 및 조치
  hosts: localhost # 로컬 시스템(현재 실행 중인 호스트)을 대상으로 합니다.
  become: yes      # 무선랜 설정 변경 및 파일 접근을 위해 관리자 권한 필요
  gather_facts: yes # 플레이북 시작 시 모든 팩트를 수집하도록 명시적으로 설정

  vars:
    networkmanager_connections_path: "/etc/NetworkManager/system-connections"

  tasks:
    # --- 1. 진단 섹션 시작 ---

    - name: 진단 결과 초기화
      ansible.builtin.set_fact:
        diagnosis_results:
          status: "양호"
          reasons: []
          needs_fix: false
          wireless_adapter_present: false
          wifi_radio_enabled: false
          current_wifi_connection: "N/A"
          saved_wifi_profiles_count: 0
          saved_wifi_profiles_list: []
          potential_vulnerability: false # 무선랜이 존재하거나 연결된 경우 잠재적 취약점으로 판단

    # Ansible facts가 완전히 수집되도록 보장 (gather_facts: yes가 있으므로 생략 가능하나, 명시적으로 한번 더 실행)
    - name: 시스템 팩트 다시 수집 (특히 네트워크 관련)
      ansible.builtin.setup:

    - name: 무선랜 어댑터 존재 여부 확인 (ansible_facts.interfaces 활용)
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{ diagnosis_results | combine({
              'wireless_adapter_present': (ansible_facts.interfaces | select('match', '^(wlan|wifi|ath|ra|wl)') | list | length > 0)
            }, recursive=True)
          }}

    - name: Wi-Fi 무선 기능 상태 확인 (nmcli)
      ansible.builtin.command: nmcli radio wifi
      register: nmcli_wifi_radio_status
      changed_when: false
      ignore_errors: true
      when: diagnosis_results.wireless_adapter_present

    - name: 현재 Wi-Fi 연결 정보 확인 (nmcli)
      ansible.builtin.command: nmcli -t -f active,ssid,device connection show --active
      register: nmcli_active_connection
      changed_when: false
      ignore_errors: true
      when: diagnosis_results.wireless_adapter_present and nmcli_wifi_radio_status.rc == 0 and 'enabled' in nmcli_wifi_radio_status.stdout | default('')

    - name: NetworkManager 저장된 Wi-Fi 프로필 개수 확인
      ansible.builtin.find:
        paths: "{{ networkmanager_connections_path }}"
        patterns: "*.nmconnection"
        use_regex: false
      register: nm_connections
      when:
        - diagnosis_results.wireless_adapter_present
        - ansible.builtin.command('which nmcli').rc == 0 # nmcli 명령 존재 여부 확인

    - name: 진단 결과 업데이트 (무선랜 상태)
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{ diagnosis_results | combine({
              'wifi_radio_enabled': ('enabled' in nmcli_wifi_radio_status.stdout | default('')) if nmcli_wifi_radio_status is defined and nmcli_wifi_radio_status.rc == 0 else false,
              'current_wifi_connection': ((nmcli_active_connection.stdout_lines | select('match', '^yes:') | first | default('')).split(':')[1] | default('N/A')) if nmcli_active_connection is defined and nmcli_active_connection.rc == 0 and nmcli_active_connection.stdout_lines | length > 0 else 'N/A',
              'saved_wifi_profiles_count': nm_connections.matched | default(0) if nm_connections is defined else 0,
              'saved_wifi_profiles_list': nm_connections.files | default([]) | map(attribute='path') | list if nm_connections is defined else []
            }, recursive=True)
          }}
      when: diagnosis_results.wireless_adapter_present

    - name: 최종 진단 결과 업데이트 (취약 여부 판단)
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{ diagnosis_results | combine({
              'status': '취약',
              'needs_fix': true,
              'potential_vulnerability': true,
              'reasons': diagnosis_results.reasons + ['시스템에 무선랜 어댑터가 존재합니다. (불필요시 제거 권고)'] if diagnosis_results.wireless_adapter_present else []
            }) | combine({
              'reasons': diagnosis_results.reasons + ['Wi-Fi 무선 기능이 활성화되어 있습니다. (현재 연결: {{ diagnosis_results.current_wifi_connection }})'] if diagnosis_results.wifi_radio_enabled else []
            }) | combine({
              'reasons': diagnosis_results.reasons + ['NetworkManager에 저장된 무선랜 연결 프로필이 있습니다. (개수: {{ diagnosis_results.saved_wifi_profiles_count }})'] if diagnosis_results.saved_wifi_profiles_count > 0 else []
            })
          }}
      when: diagnosis_results.wireless_adapter_present and (diagnosis_results.wifi_radio_enabled or diagnosis_results.saved_wifi_profiles_count > 0)

    - name: 최종 진단 결과 출력
      ansible.builtin.debug:
        msg: |
          <진단 결과: {% if not diagnosis_results.wireless_adapter_present %}양호{% else %}{{ diagnosis_results.status }}{% endif %}>
          시스템에 무선랜 어댑터 존재 여부: {{ '예' if diagnosis_results.wireless_adapter_present else '아니오' }}
          {% if diagnosis_results.wireless_adapter_present %}
            Wi-Fi 무선 기능 활성화 여부: {{ '예' if diagnosis_results.wifi_radio_enabled else '아니오' }}
            현재 연결된 Wi-Fi 네트워크: {{ diagnosis_results.current_wifi_connection }}
            저장된 무선랜 연결 프로필 수: {{ diagnosis_results.saved_wifi_profiles_count }}
            {% if diagnosis_results.saved_wifi_profiles_count > 0 %}
              저장된 프로필 (일부):
              {% for profile in diagnosis_results.saved_wifi_profiles_list[:5] %} {# 최대 5개만 출력 #}
                - {{ profile | basename }}
              {% endfor %}
              {% if diagnosis_results.saved_wifi_profiles_count > 5 %}
                ...외 {{ diagnosis_results.saved_wifi_profiles_count - 5 }}개 더
              {% endif %}
            {% endif %}

            {% if diagnosis_results.needs_fix %}
              세부 사유:
              {% for reason in diagnosis_results.reasons %}
                - {{ reason }}
              {% endfor %}
              조치 권고:
              - **비인가 무선랜 사용 가능성을 줄이기 위해 다음 조치를 고려하십시오.**
              - **(필수) 무선랜 사용 중지 (Wi-Fi 기능 끄기):**
                `sudo nmcli radio wifi off`
              - **(권고) 저장된 모든 무선랜 연결 기록 삭제:**
                `sudo rm -f {{ networkmanager_connections_path }}/*.nmconnection`
                (경고: 이 명령은 이전에 접속했던 모든 Wi-Fi 연결 정보를 삭제합니다.)
              - **(선택/강력) 무선랜 드라이버 또는 어댑터 제거:**
                서버 환경에서 무선랜 기능이 불필요한 경우, 물리적으로 무선랜 어댑터를 제거하거나 관련 드라이버 패키지를 제거하십시오.
                (예: `sudo apt purge broadcom-sta-dkms` 또는 `sudo yum remove iwl3945-firmware`)
                **이 조치는 시스템의 무선 통신 기능을 완전히 제거하므로, 매우 신중하게 결정하고 진행하십시오.**
            {% else %}
              시스템에 무선랜 어댑터가 있으나, Wi-Fi 기능이 비활성화되어 있고 저장된 프로필이 없어 보안 설정이 양호합니다.
            {% endif %}
          {% else %} {# wireless_adapter_present가 false인 경우 #}
            시스템에 무선랜 어댑터가 없어 해당 보안 항목은 양호합니다.
          {% endif %}
      when: diagnosis_results is defined

    # --- 2. 조치 섹션 시작 ---
    # 이 항목의 조치는 시스템의 네트워크 접근성에 큰 영향을 미치므로,
    # 자동 조치는 최소화하고 관리자의 수동 개입을 유도합니다.

    - name: Wi-Fi 무선 기능 비활성화
      ansible.builtin.command: nmcli radio wifi off
      when:
        - diagnosis_results.wifi_radio_enabled
        - diagnosis_results.needs_fix
        - ansible_check_mode is not defined or ansible_check_mode == false
      changed_when: true

    - name: NetworkManager 저장된 무선랜 프로필 삭제
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ nm_connections.files | default([]) }}"
      when:
        - diagnosis_results.saved_wifi_profiles_count > 0
        - diagnosis_results.needs_fix
        - ansible_check_mode is not defined or ansible_check_mode == false
      changed_when: true

    # --- 무선랜 드라이버 제거는 자동화하지 않습니다. ---
    # 이는 시스템의 무선 통신 기능을 완전히 제거하는 강력한 조치이며,
    # 사용자 환경에 따라 치명적일 수 있으므로 수동으로 확인하고 진행해야 합니다.
    # 예시:
    # - name: 무선랜 드라이버 패키지 제거 (예시 - Ubuntu)
    #   ansible.builtin.apt:
    #     name: "{{ item }}"
    #     state: absent
    #     purge: yes
    #   loop:
    #     - firmware-iwlwifi # Intel Wi-Fi 드라이버
    #     - broadcom-sta-dkms # Broadcom Wi-Fi 드라이버
    #   when:
    #     - diagnosis_results.wireless_adapter_present
    #     - diagnosis_results.needs_fix
    #     - ansible_check_mode is not defined or ansible_check_mode == false
    #     - # 특정 드라이버가 시스템에 설치되어 있을 때만 실행하는 추가 조건 필요
    #   tags: skip_driver_removal # 이 태스크는 기본적으로 실행되지 않도록 태그 추가
