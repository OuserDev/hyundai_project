---
# 플레이북 이름: 자동 로그인 비활성화 점검 및 조치
# 설명: /etc/gdm3/custom.conf 파일을 확인하여 자동 로그인 기능을 비활성화합니다.
- name: 자동 로그인 비활성화 점검 및 조치
  hosts: localhost # 로컬 시스템(현재 실행 중인 호스트)을 대상으로 합니다.
  become: yes      # 관리자 권한(sudo)으로 태스크를 실행합니다.

  vars:
    gdm_custom_conf: /etc/gdm3/custom.conf # GDM3 설정 파일 경로
    autologin_section: 'daemon'            # AutomaticLoginEnable이 위치할 섹션
    autologin_key: 'AutomaticLoginEnable'  # 자동 로그인 설정 키
    autologin_value: 'False'               # 비활성화를 위한 권고 값

  tasks:
    # --- 1. 진단 섹션 시작 ---

    # 1.1. 진단 결과 초기화
    - name: 진단 결과 초기화
      ansible.builtin.set_fact:
        diagnosis_results:
          status: "양호"
          reasons: []
          current_autologin_setting: "미확인"
          needs_fix: false

    # 1.2. /etc/gdm3/custom.conf 파일 존재 여부 및 내용 확인
    - name: GDM3 custom.conf 파일 내용 읽기
      ansible.builtin.slurp:
        src: "{{ gdm_custom_conf }}"
      register: gdm_conf_content_b64
      ignore_errors: true # 파일이 없어도 플레이북 중단하지 않음

    - name: GDM3 custom.conf 파일 내용 디코딩
      ansible.builtin.set_fact:
        gdm_conf_decoded_content: "{{ gdm_conf_content_b64.content | b64decode | default('') }}"
      when: gdm_conf_content_b64.content is defined

    - name: 자동 로그인 설정 진단
      ansible.builtin.set_fact:
        # 파일 내 [daemon] 섹션 아래 AutomaticLoginEnable=True 패턴 찾기
        autologin_match: "{{ gdm_conf_decoded_content | default('') | regex_search('^\\[daemon\\]\\n(?:(?!^\\[).)*?\\n?\\s*AutomaticLoginEnable\\s*=\\s*True', multiline=True, reflags=re.IGNORECASE|re.DOTALL) }}"
      when: gdm_conf_decoded_content is defined and gdm_conf_decoded_content | length > 0

    - name: 진단 결과 업데이트 (파일 없음)
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{ diagnosis_results | combine({
              'status': '정보 필요', # 파일이 없으므로 자동 로그인 설정 여부 확인 불가
              'reasons': diagnosis_results.reasons + ['{{ gdm_custom_conf }} 파일이 존재하지 않습니다. GDM3를 사용하지 않거나, 다른 설정 파일을 사용할 수 있습니다. 자동 로그인 설정을 수동으로 확인하십시오.'],
              'current_autologin_setting': '파일 없음'
            })
          }}
      when: gdm_conf_content_b64.skipped is defined and gdm_conf_content_b64.skipped # 파일이 없어서 slurp가 스킵된 경우

    - name: 진단 결과 업데이트 (AutomaticLoginEnable=True로 설정됨)
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{ diagnosis_results | combine({
              'status': '취약',
              'reasons': diagnosis_results.reasons + ['{{ gdm_custom_conf }} 파일에 AutomaticLoginEnable=True로 설정되어 있어 자동 로그인이 활성화되어 있습니다.'],
              'current_autologin_setting': '활성화됨 (True)',
              'needs_fix': true
            })
          }}
      when:
        - autologin_match is defined and autologin_match != []
        - diagnosis_results.status == "양호" # 이미 다른 이유로 취약이 아닌 경우만

    - name: 진단 결과 업데이트 (AutomaticLoginEnable=False 또는 주석 처리, 또는 설정 없음)
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{ diagnosis_results | combine({
              'current_autologin_setting': '비활성화 또는 설정 없음'
            })
          }}
      when:
        - diagnosis_results.status == "양호" # 아직 취약으로 판정되지 않은 경우
        - (autologin_match is not defined or autologin_match == []) # True 패턴이 매칭되지 않은 경우

    # 1.3. 최종 진단 결과 출력
    - name: 최종 진단 결과 출력
      ansible.builtin.debug:
        msg: |
          <진단 결과: {{ diagnosis_results.status }}>
          GDM3 자동 로그인 설정 파일: {{ gdm_custom_conf }}
          현재 자동 로그인 설정: {{ diagnosis_results.current_autologin_setting }}
          {% if diagnosis_results.reasons | length > 0 %}
            세부 사유:
            {% for reason in diagnosis_results.reasons %}
              - {{ reason }}
            {% endfor %}
            조치 권고:
            {% if diagnosis_results.needs_fix %}
              - `{{ gdm_custom_conf }}` 파일을 편집하여 `[daemon]` 섹션 아래 `AutomaticLoginEnable` 값을 `False`로 변경하거나 주석 처리하십시오.
              - (예시) `AutomaticLoginEnable=False`
            {% elif diagnosis_results.status == '정보 필요' %}
              - `{{ gdm_custom_conf }}` 파일이 존재하지 않는 경우, 시스템에 GDM3가 설치되지 않았거나 다른 디스플레이 매니저를 사용하고 있을 수 있습니다.
              - 시스템의 디스플레이 매니저 설정 또는 `설정 → 사용자` 메뉴에서 자동 로그인 설정 여부를 수동으로 확인하십시오.
            {% endif %}
          {% else %}
            자동 로그인 설정이 양호하게 비활성화되어 있습니다.
          {% endif %}
      when: diagnosis_results is defined

    # --- 2. 조치 섹션 시작 (자동 조치) ---

    - name: /etc/gdm3/custom.conf 파일 자동 로그인 비활성화
      ansible.builtin.lineinfile:
        path: "{{ gdm_custom_conf }}"
        regexp: '^(#?\s*)?AutomaticLoginEnable\s*='
        line: "AutomaticLoginEnable=False"
        insertafter: '^\\[daemon\\]' # [daemon] 섹션 바로 아래에 삽입
        state: present
        backup: yes
      when:
        - diagnosis_results.needs_fix # 진단 결과 취약일 때만 조치
        - gdm_conf_content_b64.stat.exists is defined and gdm_conf_content_b64.stat.exists # 파일이 존재할 때만
      notify: GDM3 서비스 재시작

  handlers:
    - name: GDM3 서비스 재시작
      ansible.builtin.service:
        name: gdm3
        state: restarted
      listen: "GDM3 서비스 재시작" # 핸들러 이름 일치
      ignore_errors: true # 재시작 실패해도 플레이북 중단하지 않음
