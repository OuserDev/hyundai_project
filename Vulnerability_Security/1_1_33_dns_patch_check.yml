---
# 플레이북 이름: DNS 보안 버전 패치 점검
# 설명: DNS 서비스(BIND/named)의 구동 여부 및 버전을 진단하여,
#       최신 버전 이하의 취약한 버전 사용 여부를 확인하고 보안 패치를 권고합니다.
- name: DNS 보안 버전 패치 점검
  hosts: localhost # 로컬 시스템(현재 실행 중인 호스트)을 대상으로 합니다.
  become: yes      # 관리자 권한(sudo)으로 태스크를 실행합니다.

  vars:
    # 알려진 취약 버전 정보 (예시, 실제 환경에 맞게 업데이트 필요)
    # 실제 환경에서는 CVE 데이터베이스나 BIND 공식 웹사이트를 참조하여 취약 버전을 정의해야 합니다.
    # 여기서는 예시로 "9.11.x" 이전 버전 중 특정 취약 버전대를 가정합니다.
    # 예시: 9.11.3 이전 버전이 취약하다고 가정합니다.
    known_vulnerable_bind_version_prefix: "9.11." # 9.11.x 버전 중 특정 취약 버전대를 의미 (예: 9.11.3 이전)
    vulnerable_bind_version_threshold: "9.11.3" # 특정 버전 미만일 경우 취약하다고 가정 (실제 CVE 참조)

  tasks:
    # --- 1. 진단 섹션 시작 ---

    # 1.1. named (BIND) 프로세스 확인
    - name: named (BIND) 프로세스 구동 여부 확인
      ansible.builtin.shell: "ps -ef | grep -q named && echo 'running' || echo 'not running'"
      register: named_process_check
      changed_when: false # 상태 변경 목적이 아님
      ignore_errors: true # 명령어 실행 실패 시에도 플레이북 중단 방지

    # 1.2. named (BIND) 버전 확인 (named가 실행 중일 경우)
    - name: named (BIND) 버전 확인
      ansible.builtin.shell: "named -v || true" # named -v 명령이 오류를 반환해도 계속 진행
      register: named_version_raw
      changed_when: false
      when: named_process_check.stdout == 'running'
      ignore_errors: true # named -v 명령이 없을 수도 있으므로 오류 무시

    # 1.3. 진단 결과 초기화
    - name: 진단 결과 초기화
      ansible.builtin.set_fact:
        diagnosis_results:
          status: "양호"
          reasons: []
          dns_status: "미사용"
          bind_version: "N/A"

    # 1.4. DNS 진단 로직 적용
    - name: DNS 진단 로직 적용
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{
            diagnosis_results | combine({
              'dns_status': '사용 중',
              'bind_version': named_version_raw.stdout | default('확인 불가'),
              'status': '취약' if (named_version_raw.stdout | default('') | version_compare(vulnerable_bind_version_threshold, '<')) else '양호',
              'reasons': (diagnosis_results.reasons | default([])) + 
                         (['DNS 서비스(BIND)가 취약한 버전(v{{ named_version_raw.stdout | default("확인 불가") }})으로 실행 중입니다.'] 
                          if (named_version_raw.stdout | default('') | version_compare(vulnerable_bind_version_threshold, '<')) else [])
            })
          }}
      when: named_process_check.stdout == 'running'

    # 1.5. 최종 진단 결과 출력
    - name: 최종 진단 결과 출력
      ansible.builtin.debug:
        msg: |
          <진단 결과: {{ diagnosis_results.status }}>
          DNS 서비스 상태: {{ diagnosis_results.dns_status }}
          BIND 버전: {{ diagnosis_results.bind_version | replace("BIND ", "") }}
          {% if diagnosis_results.reasons | length > 0 %}
            세부 사유:
            {% for reason in diagnosis_results.reasons %}
              - {{ reason }}
            {% endfor %}
            조치 권고:
            - DNS 서비스(BIND)가 사용 중이며 취약한 버전으로 진단되었습니다.
            - BIND 공식 웹사이트(www.isc.org) 또는 해당 OS 벤더사의 최신 보안 패치를 확인하여 적용하십시오.
            - 패치 적용 전에는 시스템 영향도를 파악하여 충분한 테스트를 수행해야 합니다.
            - DNS 서비스가 불필요하다면, `kill -9 [named PID]` 명령어로 데몬을 중지하십시오.
          {% else %}
            DNS 서비스가 사용되지 않거나, 취약하지 않은 버전입니다. 양호합니다.
          {% endif %}
      when: diagnosis_results is defined

    # --- 2. 조치 섹션 시작 (정보 제공 및 권고) ---
    # 이 플레이북은 자동으로 DNS 서비스를 패치하거나 업데이트하지 않습니다.
    # 이는 시스템 운영에 중대한 영향을 미칠 수 있으므로 수동 확인 및 조치를 권장합니다.
    - name: 조치 안내 메시지
      ansible.builtin.debug:
        msg: |
          DNS 보안 버전 점검이 완료되었습니다.
          자동 패치는 수행되지 않습니다. 위의 진단 결과와 조치 권고를 참조하여 수동으로 보안 패치 또는 버전 업그레이드를 진행하십시오.
      when: not ansible_check_mode # --check 모드가 아닐 때만 출력

    # 옵션: DNS 데몬 중지 (서비스를 사용하지 않는 경우)
    - name: DNS 데몬 중지 (옵션)
      ansible.builtin.shell: "kill -9 $(ps -ef | grep named | grep -v grep | awk '{print $2}') || true"
      when:
        - ansible_check_mode is not defined # --check 모드가 아닐 때만 실제 조치 수행
        - diagnosis_results.status == '취약' # 취약할 경우 (즉, 실행 중인 경우)
        - "'DNS 서비스를 사용하지 않는 경우, DNS 데몬 중지' in diagnosis_results.reasons" # 명시적으로 중지를 원할 경우 (이 부분은 사용자 판단에 따름)
        # 이 태스크는 'DNS 서비스를 사용하지 않음'이 권고될 때만 실행되도록 하거나,
        # 사용자가 명시적으로 중지를 원할 때만 실행하는 것이 안전합니다.
        # 따라서 일반적으로는 주석 처리하거나, 특정 조건에서만 실행하도록 제어해야 합니다.
      failed_when: false # kill 명령이 실패해도 전체 플레이북이 실패하지 않도록
