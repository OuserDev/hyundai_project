---
# 플레이북 이름: 최신 보안패치 및 벤더 권고사항 적용 점검
# 설명: OS 및 Kernel 버전 확인을 통해 EOL 상태 여부 및 알려진 취약점 존재 여부를 진단하고,
#       최신 보안 패치 및 벤더 권고사항 적용을 권고합니다.
- name: 최신 보안패치 및 벤더 권고사항 적용 점검
  hosts: localhost # 로컬 시스템(현재 실행 중인 호스트)을 대상으로 합니다.
  become: yes      # 관리자 권한(sudo)으로 태스크를 실행합니다.

  vars:
    # EOL OS 버전 정보 (예시, 실제 환경에 맞게 업데이트 필요)
    # 각 OS 벤더의 EOL 정책을 참고하여 정확한 날짜를 명시해야 합니다.
    # 여기서는 CentOS 7이 2024년 6월 30일 EOL, Ubuntu 20.04 LTS가 2025년 4월 EOL이라고 가정합니다.
    # 실제 시스템의 EOL 정책에 따라 변경해야 합니다.
    # https://access.redhat.com/support/policy/updates/rhel_ols
    # https://ubuntu.com/security/CVE
    eol_os_info:
      "centos":
        "7": "2024-06-30" # YYYY-MM-DD
      "ubuntu":
        "20.04": "2025-04-01" # YYYY-MM-DD
      "debian":
        "10": "2024-06-30"
      "rocky":
        "8": "2029-05-31"
      "almalinux":
        "8": "2029-05-31"
      "rhel":
        "7": "2024-06-30"

    # 알려진 취약 Kernel 버전 정보 (예시, 실제 환경에 맞게 업데이트 필요)
    # Kernel 버전 비교를 위해 문자열 비교를 사용합니다.
    # 예: "5.10.0" 미만이면 취약하다고 간주합니다.
    # "5.4.0-58" 과 같이 특정 버전으로 진단하는 것보다는,
    # "이 버전대에서는 심각한 취약점이 있으므로 패치가 필요함"으로 판단하는 것이 일반적입니다.
    vulnerable_kernel_threshold: "5.10.0" # 이 버전 미만이면 잠재적으로 취약하다고 간주 (예시)

  tasks:
    # --- 1. 진단 섹션 시작 ---

    # 1.1. OS 버전 정보 확인
    - name: OS 버전 정보 확인
      ansible.builtin.setup:
        gather_subset:
          - "min"
          - "os_family"
          - "distribution"
          - "distribution_version"
          - "kernel"
      delegate_to: localhost # 대상 호스트가 로컬이므로 명시적으로 위임
      run_once: true         # 한 번만 실행

    # 1.2. 현재 날짜 가져오기
    - name: 현재 날짜 가져오기
      ansible.builtin.set_fact:
        current_date: "{{ ansible_date_time.iso8601_basic_short }}"

    # 1.3. 진단 결과 초기화
    - name: 진단 결과 초기화
      ansible.builtin.set_fact:
        diagnosis_results:
          status: "양호"
          reasons: []
          os_version: "{{ ansible_distribution }} {{ ansible_distribution_version }}"
          kernel_version: "{{ ansible_kernel }}"
          os_eol_date: "정보 없음" # 초기화
          is_os_eol: false # 초기화
          is_kernel_vulnerable: false # 초기화

    # 1.4. OS EOL 상태 진단
    - name: OS EOL 상태 진단
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{
            diagnosis_results | combine({
              'os_eol_date': eol_os_info[ansible_distribution | lower][ansible_distribution_major_version] | default('정보 없음'),
              'is_os_eol': (eol_os_info[ansible_distribution | lower][ansible_distribution_major_version] | default('2999-12-31')) < current_date, # EOL 날짜가 현재 날짜보다 이전이면 EOL
              'status': '취약' if ((eol_os_info[ansible_distribution | lower][ansible_distribution_major_version] | default('2999-12-31')) < current_date) else diagnosis_results.status,
              'reasons': (diagnosis_results.reasons | default([])) + 
                         (['운영체제({{ ansible_distribution }} {{ ansible_distribution_version }})가 EOL(End-of-Life) 상태입니다. 보안 업데이트를 더 이상 받을 수 없습니다. (EOL 날짜: ' + eol_os_info[ansible_distribution | lower][ansible_distribution_major_version] + ')') 
                          if ((eol_os_info[ansible_distribution | lower][ansible_distribution_major_version] | default('2999-12-31')) < current_date) else [] )
            })
          }}
      when:
        - ansible_distribution | lower in eol_os_info
        - ansible_distribution_major_version in eol_os_info[ansible_distribution | lower]

    # 1.5. Kernel 취약 버전 진단 (Jinja2 주석 제거)
    - name: Kernel 취약 버전 진단
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{
            diagnosis_results | combine({
              'is_kernel_vulnerable': (ansible_kernel | default('') < vulnerable_kernel_threshold),
              'status': '취약' if (ansible_kernel | default('') < vulnerable_kernel_threshold) else diagnosis_results.status,
              'reasons': (diagnosis_results.reasons | default([])) + 
                         (['Kernel 버전({{ ansible_kernel }})이 알려진 취약점이 존재하는 버전대({{ vulnerable_kernel_threshold }} 미만)에 속하거나, 최신 보안 패치가 적용되지 않았을 수 있습니다.'] 
                          if (ansible_kernel | default('') < vulnerable_kernel_threshold) else [])
            })
          }}
      when: ansible_kernel is defined and vulnerable_kernel_threshold is defined and vulnerable_kernel_threshold | length > 0

    # 1.6. 최종 진단 결과 출력
    - name: 최종 진단 결과 출력
      ansible.builtin.debug:
        msg: |
          <진단 결과: {{ diagnosis_results.status }}>
          운영체제 버전: {{ diagnosis_results.os_version }} (EOL 날짜: {{ diagnosis_results.os_eol_date }})
          Kernel 버전: {{ diagnosis_results.kernel_version }}
          {% if diagnosis_results.reasons | length > 0 %}
            세부 사유:
            {% for reason in diagnosis_results.reasons %}
              - {{ reason }}
            {% endfor %}
            조치 권고:
            {% if diagnosis_results.is_os_eol %}
              - 현재 운영체제는 **EOL(End-of-Life) 상태**입니다. 더 이상 보안 업데이트를 받을 수 없으므로, 지원되는 최신 OS 버전으로 업그레이드하거나 마이그레이션을 고려하십시오.
            {% endif %}
            {% if diagnosis_results.is_kernel_vulnerable %}
              - **Kernel 버전**이 알려진 취약점을 포함하거나 최신 패치가 적용되지 않았을 수 있습니다.
              - 해당 OS 벤더사의 최신 보안 패치(커널 업데이트 포함)를 확인하여 적용하십시오.
              - 시스템 재부팅이 필요할 수 있습니다.
            {% endif %}
            - 모든 패치 적용 전에는 시스템 영향도를 파악하여 충분한 테스트를 수행해야 합니다.
            - 주기적인 패치 관리 정책을 수립하고 준수하십시오.
          {% else %}
            운영체제 및 Kernel 버전이 양호하며, 최신 보안 패치 관리가 이루어지고 있습니다.
          {% endif %}
      when: diagnosis_results is defined

    # --- 2. 조치 섹션 시작 (정보 제공 및 권고) ---
    # 이 플레이북은 OS 및 Kernel 패치를 자동으로 수행하지 않습니다.
    # 이는 시스템에 중대한 영향을 미치므로 수동 확인 및 조치를 강력히 권고합니다.
    - name: 조치 안내 메시지
      ansible.builtin.debug:
        msg: |
          최신 보안패치 및 벤더 권고사항 점검이 완료되었습니다.
          **자동 패치는 수행되지 않습니다.** 위의 진단 결과와 조치 권고를 참조하여 수동으로 필요한 패치 및 업그레이드를 진행하십시오.
      when: not ansible_check_mode # --check 모드가 아닐 때만 출력
