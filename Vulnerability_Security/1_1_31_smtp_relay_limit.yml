---
# 플레이북 이름: 스팸 메일 릴레이 제한 점검 및 조치
# 설명: SMTP 서버가 스팸 릴레이로 악용되거나 DoS 공격 대상이 되는 위험을 진단하고 해결합니다.
- name: 스팸 메일 릴레이 제한 점검 및 조치
  hosts: localhost # 로컬 시스템을 대상으로 합니다.
  become: yes      # 관리자 권한(sudo)으로 태스크를 실행합니다.

  vars:
    sendmail_cf: /etc/mail/sendmail.cf
    postfix_main_cf: /etc/postfix/main.cf
    
    sendmail_relay_regex_uncommented: '^\s*R\$\*\s*\$\#error\s*\$\@\s*5\.7\.1\s*\$\:\s*"550 Relaying denied"$'

    postfix_mynetworks_regex: '^\s*mynetworks\s*=\s*.*$'
    postfix_recipient_restrictions_regex: '^\s*smtpd_recipient_restrictions\s*=\s*.*$'
    
  tasks:
    # --- 1. 진단 섹션 시작 ---

    # 1.1. Sendmail 프로세스 상태 확인
    - name: Sendmail 프로세스 구동 여부 확인
      ansible.builtin.shell: "ps -ef | grep -q sendmail && echo 'running' || echo 'not running'"
      register: sendmail_process_check
      changed_when: false
      ignore_errors: true

    # 1.2. Postfix 서비스 상태 확인 (systemd 환경)
    - name: Postfix 서비스 상태 확인 (systemd)
      ansible.builtin.systemd:
        name: postfix
        state: started
      register: postfix_service_check
      ignore_errors: true
      when: ansible_service_mgr == 'systemd'

    # 1.3. Postfix 프로세스 상태 확인 (systemd가 아닌 환경)
    - name: Postfix 프로세스 확인 (non-systemd)
      ansible.builtin.shell: "ps -ef | grep -q master && ps -ef | grep -q qmgr && echo 'running' || echo 'not running'"
      register: postfix_process_check
      changed_when: false
      ignore_errors: true
      when: ansible_service_mgr != 'systemd'

    # 1.4. 진단 결과 초기화
    - name: 진단 결과 초기화
      ansible.builtin.set_fact:
        diagnosis_results:
          status: "양호"
          reasons: []
          sendmail_status: "미사용"
          postfix_status: "미사용"
          needs_sendmail_fix: false
          needs_postfix_fix: false

    # 1.5. Sendmail 릴레이 제한 진단
    - name: Sendmail 릴레이 제한 설정 진단
      block:
        - name: Sendmail 릴레이 제한 라인 확인
          ansible.builtin.shell: "grep -E '{{ sendmail_relay_regex_uncommented }}' {{ sendmail_cf }} || true"
          register: sendmail_relay_config
          changed_when: false
          ignore_errors: true

        - name: Sendmail 릴레이 제한 취약점 진단 로직 적용
          ansible.builtin.set_fact:
            diagnosis_results: >-
              {{
                diagnosis_results | combine({
                  'sendmail_status': '사용 중',
                  'status': '취약',
                  'reasons': diagnosis_results.reasons + ['Sendmail 릴레이 제한 설정이 비활성화(주석 처리)되어 있거나 적절하지 않습니다.'],
                  'needs_sendmail_fix': true
                })
              }}
          when:
            - sendmail_relay_config.stdout | default('') | length == 0 # 주석 해제된 라인이 없으면
      when: sendmail_process_check.stdout == 'running'

    # 1.6. Postfix 릴레이 제한 진단
    - name: Postfix 릴레이 제한 설정 진단
      block:
        - name: Postfix mynetworks 설정 확인
          ansible.builtin.shell: "grep -E '{{ postfix_mynetworks_regex }}' {{ postfix_main_cf }} || true"
          register: postfix_mynetworks_config
          changed_when: false
          ignore_errors: true
          # Postfix가 감지되면 항상 실행
          when: (ansible_service_mgr == 'systemd' and postfix_service_check.status is defined and postfix_service_check.status.ActiveState == 'active') or (ansible_service_mgr != 'systemd' and postfix_process_check.stdout == 'running')

        - name: Postfix smtpd_recipient_restrictions 설정 확인
          ansible.builtin.shell: "grep -E '{{ postfix_recipient_restrictions_regex }}' {{ postfix_main_cf }} || true"
          register: postfix_recipient_config
          changed_when: false
          ignore_errors: true
          # Postfix가 감지되면 항상 실행
          when: (ansible_service_mgr == 'systemd' and postfix_service_check.status is defined and postfix_service_check.status.ActiveState == 'active') or (ansible_service_mgr != 'systemd' and postfix_process_check.stdout == 'running')
        
        - name: Postfix 릴레이 제한 취약점 진단 로직 적용
          ansible.builtin.set_fact:
            diagnosis_results: >-
              {{
                diagnosis_results | combine({
                  'postfix_status': '사용 중',
                  'status': '취약',
                  'reasons': diagnosis_results.reasons + ['Postfix mynetworks 설정이 너무 광범위하거나, smtpd_recipient_restrictions에 permit_mynetworks가 포함되어 있지 않습니다.'],
                  'needs_postfix_fix': true
                })
              }}
          when:
            # mynetworks가 정의되어 있고 예상되는 제한된 IP를 포함하지 않거나,
            # smtpd_recipient_restrictions에서 permit_mynetworks를 찾을 수 없는 경우
            - (postfix_mynetworks_config.stdout | default('') is defined and not (postfix_mynetworks_config.stdout | default('') is search('127.0.0.1/8') or postfix_mynetworks_config.stdout | default('') is search('192.168.0.0/24'))) or \
              (postfix_recipient_config.stdout | default('') is not search('permit_mynetworks'))
            # Postfix가 활성화되어 있을 때만 이 블록이 실행되도록 합니다.
            - ((ansible_service_mgr == 'systemd' and postfix_service_check.status is defined and postfix_service_check.status.ActiveState == 'active') or (ansible_service_mgr != 'systemd' and postfix_process_check.stdout == 'running'))

      # 이 'when' 조건은 전체 블록에 적용되어 Postfix 진단이 Postfix 활성화 시에만 실행되도록 합니다.
      when: (ansible_service_mgr == 'systemd' and postfix_service_check.status is defined and postfix_service_check.status.ActiveState == 'active') or (ansible_service_mgr != 'systemd' and postfix_process_check.stdout == 'running')

    # 1.7. 최종 진단 결과 출력
    - name: 최종 진단 결과 출력
      ansible.builtin.debug:
        msg: |
          <진단 결과: {{ diagnosis_results.status }}>
          Sendmail 상태: {{ diagnosis_results.sendmail_status }}
          Postfix 상태: {{ diagnosis_results.postfix_status }}
          {% if diagnosis_results.reasons | length > 0 %}
            세부 사유:
            {% for reason in diagnosis_results.reasons %}
              - {{ reason }}
            {% endfor %}
            조치 권고:
            {% if diagnosis_results.needs_sendmail_fix %}
              - Sendmail: `/etc/mail/sendmail.cf` 파일에서 `R$* $#error $@ 5.7.1 $: "550 Relaying denied"` 라인의 주석(`#`)을 제거하십시오.
              - 또는 `/etc/mail/access` 파일을 편집하여 특정 IP/도메인만 허용하도록 설정하십시오.
            {% endif %}
            {% if diagnosis_results.needs_postfix_fix %}
              - Postfix: `/etc/postfix/main.cf` 파일에서 `mynetworks` 설정을 로컬 네트워크(예: `127.0.0.1/8 192.168.0.0/24`)로 제한하십시오.
              - `smtpd_recipient_restrictions`에 `permit_mynetworks`가 포함되어 있는지 확인하십시오.
            {% endif %}
            - 변경 후에는 해당 메일 서비스(sendmail 또는 postfix)를 재시작해야 합니다.
          {% else %}
            SMTP 서비스가 사용되지 않거나, 릴레이 제한이 적절하게 설정되어 양호합니다.
          {% endif %}
      when: diagnosis_results is defined

    # --- 2. 조치 섹션 시작 ---
    # 조치: Sendmail 릴레이 제한 주석 해제 (간단한 예시)
    - name: Sendmail 릴레이 제한 주석 해제 (조치)
      ansible.builtin.lineinfile:
        path: "{{ sendmail_cf }}"
        regexp: '^\s*#R\$\*\s*\$\#error\s*\$\@\s*5\.7\.1\s*\$\:\s*"550 Relaying denied"$'
        line: 'R$* $#error $@ 5.7.1 $: "550 Relaying denied"'
        state: present
      when:
        - ansible_check_mode is not defined
        - diagnosis_results.needs_sendmail_fix
        - sendmail_process_check.stdout == 'running'
      notify: Restart Sendmail

    # 조치: Postfix mynetworks 제한 (예시, 실제 환경에 맞게 수정 필요)
    - name: Postfix mynetworks 설정 (조치 - 예시)
      ansible.builtin.lineinfile:
        path: "{{ postfix_main_cf }}"
        regexp: '^\s*mynetworks\s*=\s*.*$'
        line: 'mynetworks = 127.0.0.0/8 [::1]/128 192.168.0.0/24' # 중요: 실제 네트워크에 맞게 조정해야 합니다.
        state: present
        backup: yes
      when:
        - ansible_check_mode is not defined
        - diagnosis_results.needs_postfix_fix
        - (ansible_service_mgr == 'systemd' and postfix_service_check.status is defined and postfix_service_check.status.ActiveState == 'active') or (ansible_service_mgr != 'systemd' and postfix_process_check.stdout == 'running')
      notify: Restart Postfix

    # 조치: Postfix smtpd_recipient_restrictions에 permit_mynetworks 추가 (예시)
    - name: Postfix smtpd_recipient_restrictions에 permit_mynetworks 추가 (조치 - 예시)
      ansible.builtin.lineinfile:
        path: "{{ postfix_main_cf }}"
        regexp: '^\s*smtpd_recipient_restrictions\s*=\s*(.*)$'
        line: 'smtpd_recipient_restrictions = $1 permit_mynetworks' # 기존 값 뒤에 추가
        backrefs: yes
        state: present
        backup: yes
      when:
        - ansible_check_mode is not defined
        - diagnosis_results.needs_postfix_fix
        - (ansible_service_mgr == 'systemd' and postfix_service_check.status is defined and postfix_service_check.status.ActiveState == 'active') or (ansible_service_mgr != 'systemd' and postfix_process_check.stdout == 'running')
        - postfix_recipient_config.stdout | default('') is not search('permit_mynetworks') # 아직 없으면 추가
      notify: Restart Postfix

  handlers:
    - name: Sendmail 재시작
      ansible.builtin.service:
        name: sendmail
        state: restarted
      when: sendmail_process_check.stdout == 'running'

    - name: Postfix 재시작
      ansible.builtin.service:
        name: postfix
        state: restarted
      when: (ansible_service_mgr == 'systemd' and postfix_service_check.status is defined and postfix_service_check.status.ActiveState == 'active') or (ansible_service_mgr != 'systemd' and postfix_process_check.stdout == 'running')
