---
- name: 파일 및 디렉토리 관리 - /etc/(r)syslog.conf 파일 소유자 및 권한 설정
  hosts: local
  become: yes

  tasks:
    - name: "syslog 설정 파일 존재 여부 확인"
      # /etc/syslog.conf와 /etc/rsyslog.conf 중 어떤 파일이 존재하는지 확인합니다.
      # rsyslog가 최신 시스템에서 더 흔하므로 먼저 확인합니다.
      ansible.builtin.stat:
        path: "{{ item }}"
      register: syslog_file_stat
      loop:
        - "/etc/rsyslog.conf" # 최신 시스템에서 주로 사용되는 설정 파일
        - "/etc/syslog.conf"

    - name: "실제 syslog 설정 파일 경로 결정"
      # stat 결과에서 'exists'가 true인 파일 중 첫 번째 파일의 경로를 선택합니다.
      # 만약 어떤 파일도 찾지 못하면 'active_syslog_config_path'는 빈 문자열이 됩니다.
      set_fact:
        active_syslog_config_path: >-
          {{ (syslog_file_stat.results | selectattr('stat.exists') | map(attribute='item') | first) | default('') }}

    - name: "디버그 - 결정된 syslog 설정 파일 경로 확인"
      # 'active_syslog_config_path' 변수에 어떤 값이 저장되었는지 확인합니다.
      # verbosity를 설정하여 기본적으로는 표시되지 않고, `-v` 옵션 사용 시에만 표시됩니다.
      ansible.builtin.debug:
        var: active_syslog_config_path
        verbosity: 1

    - name: "{{ active_syslog_config_path }} 파일 소유자 및 권한 설정 (소유자: root, 권한: 644)"
      # 시스템의 syslog 설정 파일(syslog.conf 또는 rsyslog.conf)의 소유자 및 권한을 설정합니다.
      # 이 파일은 시스템 로깅 설정을 담고 있으며, 비인가자에 의한 변경을 방지하기 위해 권한을 제한해야 합니다.
      # 진단 기준: 양호 - 소유자 root, 권한 644 이하.
      # 조치 방법: 소유자 root, 권한 644로 설정.
      ansible.builtin.file:
        path: "{{ active_syslog_config_path }}"
        owner: root
        group: root # 기본적으로 root 그룹으로 설정하나, 시스템에 따라 'syslog' 또는 'adm' 그룹이 적절할 수도 있습니다.
        mode: '0644' # 'rw-r--r--' (root는 읽기/쓰기, 그룹 및 다른 사용자는 읽기만 가능)
        state: file
      when: active_syslog_config_path | length > 0 # 경로가 비어있지 않을 때만 실행
