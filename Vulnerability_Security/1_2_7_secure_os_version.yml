---
# 플레이북 이름: 안전한 버전의 OS 사용 점검 및 조치 (권고)
# 설명: OS 버전 및 커널 정보를 확인하고, 보안 패치 필요 여부를 진단하여 권고합니다.
- name: 안전한 버전의 OS 사용 점검 및 조치 (권고)
  hosts: localhost # 로컬 시스템(현재 실행 중인 호스트)을 대상으로 합니다.
  become: yes      # 관리자 권한(sudo)으로 태스크를 실행합니다.

  tasks:
    # --- 1. 진단 섹션 시작 ---

    - name: 진단 결과 초기화
      ansible.builtin.set_fact:
        diagnosis_results:
          status: "양호"
          reasons: []
          os_info: {}
          kernel_info: {}
          upgradable_packages_found: false
          needs_fix: false

    - name: OS 배포판 정보 확인 (lsb_release -a)
      ansible.builtin.command: lsb_release -a
      register: lsb_release_output
      changed_when: false
      ignore_errors: true # lsb_release가 없는 시스템도 있을 수 있음

    - name: 커널 버전 확인 (uname -r)
      ansible.builtin.command: uname -r
      register: uname_r_output
      changed_when: false

    - name: OS 정보 설정
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{ diagnosis_results | combine({
              'os_info': {
                  'description': lsb_release_output.stdout if lsb_release_output.rc == 0 else '정보 없음',
                  'codename': (lsb_release_output.stdout | regex_search('Codename:\\s*(.*)'))[1] if lsb_release_output.rc == 0 and (lsb_release_output.stdout | regex_search('Codename:\\s*(.*)')) else '미확인',
                  'distributor': (lsb_release_output.stdout | regex_search('Distributor ID:\\s*(.*)'))[1] if lsb_release_output.rc == 0 and (lsb_release_output.stdout | regex_search('Distributor ID:\\s*(.*)')) else '미확인'
              },
              'kernel_info': {
                  'version': uname_r_output.stdout | default('정보 없음')
              }
            })
          }}

    # --- 보안 업데이트 존재 여부 확인 ---
    # 배포판 별로 다르게 처리
    - name: Debian/Ubuntu 계열 업데이트 확인
      ansible.builtin.command: "apt list --upgradable -qq"
      register: apt_upgradable_packages
      changed_when: false
      ignore_errors: true
      when: diagnosis_results.os_info.distributor in ['Ubuntu', 'Debian']

    - name: RedHat/CentOS/Fedora 계열 업데이트 확인
      ansible.builtin.command: "yum check-update -q || true"
      register: yum_upgradable_packages
      changed_when: false
      ignore_errors: true
      when: diagnosis_results.os_info.distributor in ['RedHat', 'CentOS', 'Fedora', 'Rocky', 'AlmaLinux']

    - name: 진단 결과 업데이트 (보안 업데이트 존재)
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{ diagnosis_results | combine({
              'status': '취약',
              'reasons': diagnosis_results.reasons + ['시스템에 적용되지 않은 보안 업데이트가 존재합니다.'],
              'upgradable_packages_found': true,
              'needs_fix': true
            })
          }}
      when:
        - (apt_upgradable_packages is defined and apt_upgradable_packages.skipped is not defined and apt_upgradable_packages.rc == 0 and apt_upgradable_packages.stdout | default('') | trim != '') or
          (yum_upgradable_packages is defined and yum_upgradable_packages.skipped is not defined and yum_upgradable_packages.rc == 0 and yum_upgradable_packages.stdout | default('') | trim != '')

    - name: 최종 진단 결과 출력
      ansible.builtin.debug:
        msg: |
          <진단 결과: {{ diagnosis_results.status }}>
          OS 배포판: {{ diagnosis_results.os_info.distributor }} ({{ diagnosis_results.os_info.codename }})
          현재 커널 버전: {{ diagnosis_results.kernel_info.version }}
          OS 전체 정보: {{ diagnosis_results.os_info.description }}

          {% if diagnosis_results.upgradable_packages_found %}
            세부 사유:
            {% for reason in diagnosis_results.reasons %}
              - {{ reason }}
            {% endfor %}
            시스템에 적용 가능한 보안 업데이트가 존재합니다.
            {% if apt_upgradable_packages is defined and apt_upgradable_packages.skipped is not defined and apt_upgradable_packages.rc == 0 and apt_upgradable_packages.stdout | default('') | trim != '' %}
              (APT 기반 시스템 - 업데이트 목록 확인: apt list --upgradable)
              {% if apt_upgradable_packages.stdout_lines | length < 10 %}
                업데이트 가능한 패키지 (일부):
                {% for line in apt_upgradable_packages.stdout_lines %}
                  - {{ line }}
                {% endfor %}
              {% else %}
                업데이트 가능한 패키지 수가 많아 목록을 생략합니다.
              {% endif %}
            {% endif %}
            {% if yum_upgradable_packages is defined and yum_upgradable_packages.skipped is not defined and yum_upgradable_packages.rc == 0 and yum_upgradable_packages.stdout | default('') | trim != '' %}
              (YUM/DNF 기반 시스템 - 업데이트 목록 확인: yum check-update)
              {% if yum_upgradable_packages.stdout_lines | length < 10 %}
                업데이트 가능한 패키지 (일부):
                {% for line in yum_upgradable_packages.stdout_lines %}
                  - {{ line }}
                {% endfor %}
              {% else %}
                업데이트 가능한 패키지 수가 많아 목록을 생략합니다.
              {% endif %}
            {% endif %}

            조치 권고:
            - **OS 패치는 민감한 작업이므로, 자동 조치되지 않습니다.**
            - OS 관리자 및 서비스 개발자와 협의하여 패치 적용 정책을 수립하고, 주기적으로 최신 보안 패치를 적용하십시오.
            - 패치 적용 전 다음 사항을 반드시 고려하고 준수해야 합니다:
              1.  해당 패치가 시스템 자체에 미칠 수 있는 영향 검토 (OS 벤더와 협의).
              2.  해당 패치가 운용 중인 서비스 프로그램에 미칠 수 있는 영향 검토 (OS 벤더 및 서비스 개발자와 협의).
              3.  패치 적용 후 예기치 않은 서비스 중지에 대비하여, **Roll-Back 및 비상 복구 절차 수립 및 테스트**.
              4.  패치 적용 전/후 시스템에 대한 **Full Backup 실시**.
          {% else %}
            현재 시스템에 적용 가능한 중요한 보안 업데이트가 없는 것으로 보이며, OS 보안 관리가 양호합니다.
          {% endif %}
      when: diagnosis_results is defined
