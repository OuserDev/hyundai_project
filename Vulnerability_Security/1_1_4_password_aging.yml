---
- name: 계정관리 - 패스워드 최대 사용 기간 설정 (Ubuntu)
  hosts: local
  become: yes

  vars:
    # 패스워드 최대 사용 기간 : 90일
    max_password_days: 90
    # 패스워드 최소 사용 기간 : 즉시 비밀번호 변경을 방지하기 위해 1일로 설정.
    min_password_days: 1
    # 패스워드 만료 전 경고 기간 : 만료 7일 전부터 사용자에게 경고 메시지 표시.
    warn_password_days: 7

    login_defs_file: "/etc/login.defs"

  tasks:
    - name: 시스템 전반의 패스워드 사용 기간 기본값 설정 (login.defs)
      # /etc/login.defs 파일은 새로 생성되는 사용자 계정에 적용되는 기본 패스워드 정책을 정의합니다.
      ansible.builtin.lineinfile:
        path: "{{ login_defs_file }}"
        regexp: '^{{ item.key }}\s+'
        line: "{{ item.key }}\t{{ item.value }}"
        state: present
        backup: yes
      loop:
        - { key: 'PASS_MAX_DAYS', value: "{{ max_password_days }}" }
        - { key: 'PASS_MIN_DAYS', value: "{{ min_password_days }}" }
        - { key: 'PASS_WARN_AGE', value: "{{ warn_password_days }}" }

    - name: 시스템의 일반 사용자 목록 가져오기
      # 시스템에 존재하는 모든 사용자 정보를 getent 모듈을 통해 가져옵니다.
      ansible.builtin.getent:
        database: passwd
      register: all_users_info

    - name: 시스템 계정 및 로그인 불가 계정 필터링
      # getent 결과에서 UID 1000 이상이고 로그인 쉘을 가진 일반 사용자만 추출합니다.
      # Jinja2 루프의 결과(문자열 형태)를 from_yaml 필터로 실제 리스트 타입으로 변환합니다.
      set_fact:
        regular_users: "{{ result_string | from_yaml }}"
      vars:
        result_string: |
          {% set users = [] %}
          {% for username, data in (all_users_info.passwd | default(all_users_info.ansible_facts.getent_passwd)).items() %}
            {#
              'data' 리스트는 /etc/passwd 필드를 0부터 시작하는 인덱스로 나타냅니다:
              data[0]: 패스워드 필드 ('x')
              data[1]: UID (User ID)
              data[2]: GID (Group ID)
              data[3]: GECOS (코멘트)
              data[4]: 홈 디렉토리
              data[5]: 쉘 (로그인 쉘)
            #}
            {% if data is defined and data | length > 5 and
                  data[1] is defined and data[1] | int >= 1000 and
                  data[5] is defined and data[5] != '/usr/sbin/nologin' and data[5] != '/bin/false' %}
              {% set _ = users.append(username) %}
            {% endif %}
          {% endfor %}
          {{ users }} # 이 라인에서 리스트가 문자열로 출력됩니다.

    - name: 기존 일반 사용자에 패스워드 사용 기간 적용 (chage 명령어 사용)
      # 필터링된 각 일반 사용자에 대해 chage 명령어를 사용하여 패스워드 사용 기간을 설정합니다.
      ansible.builtin.command: "chage -M {{ max_password_days }} -m {{ min_password_days }} -W {{ warn_password_days }} {{ item }}"
      loop: "{{ regular_users }}"
      register: chage_command_result
      changed_when: chage_command_result.rc == 0

    - name: 패스워드 사용 기간이 적용된 일반 사용자 목록 표시 (확인용)
      ansible.builtin.debug:
        msg: "패스워드 사용 기간이 적용된 사용자: {{ regular_users }}"
