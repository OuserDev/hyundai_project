---
# 플레이북 이름: 패스워드의 주기적 변경 점검 및 조치
# 설명: /etc/login.defs 파일의 PASS_MAX_DAYS 설정 및 개별 계정의 패스워드 최대 사용 기간을 진단하고 조치합니다.
- name: 패스워드의 주기적 변경 점검 및 조치
  hosts: localhost # 로컬 시스템(현재 실행 중인 호스트)을 대상으로 합니다.
  become: yes      # 관리자 권한(sudo)으로 태스크를 실행합니다.

  vars:
    login_defs_file: /etc/login.defs
    recommended_max_days: 90 # 권고하는 패스워드 최대 사용 기간 (90일)
    # 시스템 계정 (UID 0-999) 및 nologin 쉘을 사용하는 계정 제외
    min_user_uid: 1000
    excluded_shells:
      - /sbin/nologin
      - /bin/false
      - /usr/sbin/nologin
      - /bin/nologin

  tasks:
    # --- 1. 진단 섹션 시작 ---

    # 1.1. 진단 결과 초기화
    - name: 진단 결과 초기화
      ansible.builtin.set_fact:
        diagnosis_results:
          status: "양호"
          reasons: []
          login_defs_max_days: "미확인"
          users_with_long_max_days: [] # 90일 초과 계정 목록
          needs_login_defs_fix: false
          needs_user_chage_fix: false

    # 1.2. /etc/login.defs 파일 내용 읽기
    - name: /etc/login.defs 파일 내용 읽기
      ansible.builtin.slurp:
        src: "{{ login_defs_file }}"
      register: login_defs_content_b64

    # 1.3. /etc/login.defs 내 PASS_MAX_DAYS 설정 진단
    - name: PASS_MAX_DAYS 설정 진단
      ansible.builtin.set_fact:
        current_max_days: "{{ (login_defs_content_b64.content | b64decode | regex_search('^\\s*PASS_MAX_DAYS\\s+(\\d+)', multiline=True))[1] | int }}"
      when:
        - login_defs_content_b64.content is defined
        - login_defs_content_b64.content | b64decode | regex_search('^\\s*PASS_MAX_DAYS\\s+\\d+', multiline=True)

    - name: /etc/login.defs PASS_MAX_DAYS 상태 업데이트 (초과)
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{
            diagnosis_results | combine({
              'login_defs_max_days': current_max_days,
              'status': '취약',
              'reasons': diagnosis_results.reasons + ['/etc/login.defs 파일의 PASS_MAX_DAYS가 권고치({{ recommended_max_days }}일)를 초과합니다. (현재: {{ current_max_days }}일)'],
              'needs_login_defs_fix': true
            })
          }}
      when:
        - current_max_days is defined
        - current_max_days | int > recommended_max_days

    - name: /etc/login.defs PASS_MAX_DAYS 상태 업데이트 (양호)
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{
            diagnosis_results | combine({
              'login_defs_max_days': current_max_days
            })
          }}
      when:
        - current_max_days is defined
        - current_max_days | int <= recommended_max_days
        - not diagnosis_results.needs_login_defs_fix

    - name: /etc/login.defs PASS_MAX_DAYS 상태 업데이트 (설정 없음)
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{
            diagnosis_results | combine({
              'login_defs_max_days': '설정 없음',
              'status': '취약',
              'reasons': diagnosis_results.reasons + ['/etc/login.defs 파일에 PASS_MAX_DAYS 설정이 없거나 유효하지 않습니다.'],
              'needs_login_defs_fix': true
            })
          }}
      when: current_max_days is not defined

    # 1.4. 시스템의 모든 사용자 계정 목록 가져오기 (UID 1000 이상) - /etc/passwd 직접 파싱
    - name: /etc/passwd 파일 내용 읽기
      ansible.builtin.slurp:
        src: /etc/passwd
      register: passwd_content_b64
      failed_when: false

    - name: /etc/passwd 내용 디코딩 및 줄 단위 분리
      ansible.builtin.set_fact:
        passwd_lines: "{{ (passwd_content_b64.content | b64decode | default('')).split('\\n') }}"
      when: passwd_content_b64.content is defined or passwd_content_b64 is defined

    - name: all_users_list 초기화 (항상 먼저 실행)
      ansible.builtin.set_fact:
        all_users_list: []

    - name: 유효한 사용자 계정 목록 파싱 (실제 처리)
      ansible.builtin.set_fact:
        all_users_list: "{{
          (all_users_list | default([])) + [username]
        }}"
      loop: "{{ passwd_lines | default([]) }}"
      loop_control:
        loop_var: line
      vars:
        parts: "{{ line.split(':') }}"
        username: "{{ parts[0] | default('') }}"
        uid_val: "{{ (parts[2] | default(-1)) | int }}"
        shell_val: "{{ parts[6] | default('/bin/false') }}"
      when:
        - line | trim | length > 0
        - parts | length >= 7
        - uid_val | int >= min_user_uid
        - shell_val not in excluded_shells

    - name: 각 계정별 패스워드 최대 사용 기간 진단
      ansible.builtin.shell: "chage -l {{ item }} | grep -i 'Maximum number of days between password changes' | awk '{print $NF}'"
      register: chage_output
      loop: "{{ all_users_list }}"
      loop_control:
        label: "{{ item }}"
      ignore_errors: true
      when: all_users_list | length > 0

    - name: 90일 초과하는 사용자 계정 취합
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{
            diagnosis_results | combine({
              'users_with_long_max_days': diagnosis_results.users_with_long_max_days + [
                { 'user': item.item, 'max_days': item.stdout | int }
              ],
              'status': '취약',
              'reasons': diagnosis_results.reasons + ['사용자 계정 "{{ item.item }}"의 패스워드 최대 사용 기간이 권고치({{ recommended_max_days }}일)를 초과합니다. (현재: {{ item.stdout }}일)']
            })
          }}
      when:
        - item.stdout is defined and item.stdout is not none
        - item.stdout | trim | length > 0
        - item.stdout | int > recommended_max_days
        - item.rc == 0

    - name: 모든 사용자 계정이 양호한지 최종 판단
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{
            diagnosis_results | combine({
              'needs_user_chage_fix': true
            })
          }}
      when: diagnosis_results.users_with_long_max_days | length > 0

    # 1.5. 최종 진단 결과 출력
    - name: 최종 진단 결과 출력
      ansible.builtin.debug:
        msg: |
          <진단 결과: {{ diagnosis_results.status }}>
          /etc/login.defs (PASS_MAX_DAYS): {{ diagnosis_results.login_defs_max_days }}일 (권고: {{ recommended_max_days }}일 이하)
          개별 사용자 계정 패스워드 최대 사용 기간 진단:
          {% if diagnosis_results.users_with_long_max_days | length > 0 %}  {# <--- 여기서 수정 #}
            다음 계정들의 패스워드 최대 사용 기간이 {{ recommended_max_days }}일을 초과합니다:
            {% for user_info in diagnosis_results.users_with_long_max_days %}
              - 사용자: {{ user_info.user }}, 최대 사용 기간: {{ user_info.max_days }}일
            {% endfor %}
          {% else %}
            모든 일반 사용자 계정의 패스워드 최대 사용 기간이 {{ recommended_max_days }}일 이하이거나, 추가 확인이 필요합니다.
          {% endif %}
          {% if diagnosis_results.reasons | length > 0 %}
            세부 사유:
            {% for reason in diagnosis_results.reasons %}
              - {{ reason }}
            {% endfor %}
            조치 권고:
            {% if diagnosis_results.needs_login_defs_fix %}
              - **신규 계정 적용을 위한 /etc/login.defs 설정:**
                - `{{ login_defs_file }}` 파일을 편집하여 `PASS_MAX_DAYS` 값을 `{{ recommended_max_days }}`로 설정하십시오.
                - (예시) `PASS_MAX_DAYS 90`
            {% endif %}
            {% if diagnosis_results.needs_user_chage_fix %}
              - **기존 계정 적용을 위한 `chage` 명령어 사용:**
                - 위 목록에 있는 각 사용자 계정에 대해 다음 명령을 실행하여 패스워드 최대 사용 기간을 `{{ recommended_max_days }}`일로 설정하십시오.
                - (예시) `sudo chage -M {{ recommended_max_days }} [계정명]`
                - 이 명령은 계정의 패스워드 만료일도 재설정할 수 있으니 주의하십시오.
            {% endif %}
            - **패스워드 변경 정책 수립:** 사용자들에게 패스워드 변경의 중요성을 인지시키고, 정기적인 변경을 강제하는 정책을 수립하고 준수하도록 합니다.
            - **강력한 패스워드 복잡성 규칙과 함께 사용:** 최대 사용 기간 설정은 패스워드 복잡성 규칙과 함께 사용될 때 효과가 극대화됩니다.
          {% else %}
            패스워드 최대 사용 기간 설정이 양호합니다.
          {% endif %}
      when: diagnosis_results is defined

    # --- 2. 조치 섹션 시작 (자동 조치) ---

    # 2.1. /etc/login.defs 파일의 PASS_MAX_DAYS 설정 (자동 조치)
    - name: /etc/login.defs 파일 PASS_MAX_DAYS를 {{ recommended_max_days }}로 설정
      ansible.builtin.lineinfile:
        path: "{{ login_defs_file }}"
        regexp: '^\\s*#?PASS_MAX_DAYS\\s+'
        line: "PASS_MAX_DAYS {{ recommended_max_days }}"
        state: present
        backup: yes
      when: diagnosis_results.needs_login_defs_fix
      # 이 변경은 신규 계정에만 적용됩니다. 기존 계정은 수동 조치 권고.

    # 2.2. 기존 계정에 대한 조치는 수동 권고 (자동 조치는 위험할 수 있음)
    - name: 개별 계정 패스워드 최대 사용 기간 변경은 수동 조치 권고
      ansible.builtin.debug:
        msg: |
          **주의: 기존 사용자 계정의 패스워드 최대 사용 기간은 자동으로 변경되지 않습니다.**
          이는 사용자의 현재 패스워드 만료일에 영향을 미칠 수 있으며, 사용자에게 불편을 줄 수 있습니다.
          위 진단 결과에서 {{ recommended_max_days }}일을 초과하는 계정이 있다면,
          다음 명령을 사용하여 수동으로 변경하십시오:
          `sudo chage -M {{ recommended_max_days }} [계정명]`
          모든 계정에 일괄 적용하려면 스크립트 등을 통해 신중하게 진행해야 합니다.
      when: diagnosis_results.needs_user_chage_fix and not ansible_check_mode
