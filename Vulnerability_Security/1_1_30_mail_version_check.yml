---
# 플레이북 이름: Sendmail / Postfix 버전 점검
# 설명: 취약점이 발견된 Sendmail 또는 Postfix 버전 사용으로 인한 시스템 권한 획득 및 주요 정보 유출 가능성을 방지하기 위해
#       서비스 구동 여부와 버전을 진단하고, 필요한 조치(패치 권고)를 안내합니다.
- name: Sendmail / Postfix 버전 점검
  hosts: localhost # 로컬 시스템(현재 실행 중인 호스트)을 대상으로 합니다.
  become: yes      # 관리자 권한(sudo)으로 태스크를 실행합니다.

  vars:
    sendmail_version_file: /etc/mail/sendmail.cf
    # 알려진 취약 버전 정보 (예시, 실제 환경에 맞게 업데이트 필요)
    known_vulnerable_sendmail_version_prefix: "8.14." # 8.14.x 버전 중 특정 취약 버전대를 의미 (예: 8.14.9 이전)
    known_vulnerable_postfix_version_prefix: "3.2."   # 3.2.x 버전 중 특정 취약 버전대를 의미 (예: 3.2.4 이전)
    
  tasks:
    # --- 1. 진단 섹션 시작 ---

    # 1.1. Sendmail 서비스 프로세스 확인
    - name: Sendmail 프로세스 구동 여부 확인
      ansible.builtin.shell: "ps -ef | grep -q sendmail && echo 'running' || echo 'not running'"
      register: sendmail_process_check
      changed_when: false # 상태 변경 목적이 아님
      ignore_errors: true # 명령어 실행 실패 시에도 플레이북 중단 방지

    # 1.2. Sendmail 버전 확인 (Sendmail이 실행 중일 경우)
    - name: Sendmail 버전 확인
      ansible.builtin.shell: "grep -E '^DZ' {{ sendmail_version_file}} | awk -F'\"' '{print $2}' || true"
      register: sendmail_version_raw
      changed_when: false
      when:
        - sendmail_process_check.stdout == 'running'
        - ansible.builtin.file.exists(sendmail_version_file) # sendmail.cf 파일이 존재할 때만 실행
      ignore_errors: true # 파일이 없거나 grep 실패 시에도 오류 처리 방지

    # 1.3. Postfix 서비스 상태 확인
    - name: Postfix 서비스 상태 확인
      ansible.builtin.systemd:
        name: postfix
        state: started
      register: postfix_service_check
      ignore_errors: true # 서비스가 없거나 비활성화되어 있어도 오류 처리 방지
      when: ansible_service_mgr == 'systemd'

    - name: Postfix 프로세스 확인 (systemd가 아닌 경우)
      ansible.builtin.shell: "ps -ef | grep -q master && ps -ef | grep -q qmgr && echo 'running' || echo 'not running'" # Postfix의 주요 프로세스
      register: postfix_process_check
      changed_when: false
      ignore_errors: true
      when: ansible_service_mgr != 'systemd'

    # 1.4. Postfix 버전 확인 (Postfix가 실행 중일 경우)
    - name: Postfix 버전 확인
      ansible.builtin.command: "postconf -d | grep mail_version"
      register: postfix_version_raw
      changed_when: false
      # 수정된 부분: 조건문을 한 줄로 작성했습니다.
      when: (ansible_service_mgr == 'systemd' and postfix_service_check.status is defined and postfix_service_check.status.ActiveState == 'active') or (ansible_service_mgr != 'systemd' and postfix_process_check.stdout == 'running')
      ignore_errors: true # postconf 명령 실패 시에도 오류 처리 방지

    # 1.5. 진단 결과 초기화
    - name: 진단 결과 초기화
      ansible.builtin.set_fact:
        diagnosis_results:
          status: "양호"
          reasons: []
          sendmail_status: "미사용"
          postfix_status: "미사용"
          sendmail_version: "N/A"
          postfix_version: "N/A"

    # 1.6. Sendmail 진단 로직 적용
    - name: Sendmail 진단 로직 적용
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{
            diagnosis_results | combine({
              'sendmail_status': '사용 중',
              'sendmail_version': sendmail_version_raw.stdout | default('확인 불가'),
              'status': '취약' if (sendmail_version_raw.stdout | default('') | starts_with(known_vulnerable_sendmail_version_prefix)) else '양호',
              'reasons': (diagnosis_results.reasons | default([])) + 
                         (['Sendmail이 취약한 버전(v{{ sendmail_version_raw.stdout | default("확인 불가") }})으로 실행 중입니다.'] 
                          if (sendmail_version_raw.stdout | default('') | starts_with(known_vulnerable_sendmail_version_prefix)) else [])
            })
          }}
      when: sendmail_process_check.stdout == 'running'

    # 1.7. Postfix 진단 로직 적용
    - name: Postfix 진단 로직 적용
      ansible.builtin.set_fact:
        diagnosis_results: >-
          {{
            diagnosis_results | combine({
              'postfix_status': '사용 중',
              'postfix_version': postfix_version_raw.stdout | default('확인 불가'),
              'status': '취약' if (diagnosis_results.status == '취약' or (postfix_version_raw.stdout | default('') | starts_with('mail_version = ' + known_vulnerable_postfix_version_prefix))) else '양호',
              'reasons': (diagnosis_results.reasons | default([])) + 
                         (['Postfix가 취약한 버전(v{{ postfix_version_raw.stdout | default("확인 불가") | replace("mail_version = ", "") }})으로 실행 중입니다.'] 
                          if (postfix_version_raw.stdout | default('') | starts_with('mail_version = ' + known_vulnerable_postfix_version_prefix)) else [])
            })
          }}
      # 수정된 부분: 조건문을 한 줄로 작성했습니다.
      when: (ansible_service_mgr == 'systemd' and postfix_service_check.status is defined and postfix_service_check.status.ActiveState == 'active') or (ansible_service_mgr != 'systemd' and postfix_process_check.stdout == 'running')

    # 1.8. 최종 진단 결과 출력
    - name: 최종 진단 결과 출력
      ansible.builtin.debug:
        msg: |
          <진단 결과: {{ diagnosis_results.status }}>
          Sendmail 상태: {{ diagnosis_results.sendmail_status }} (버전: {{ diagnosis_results.sendmail_version }})
          Postfix 상태: {{ diagnosis_results.postfix_status }} (버전: {{ diagnosis_results.postfix_version | replace("mail_version = ", "") }})
          {% if diagnosis_results.reasons | length > 0 %}
            세부 사유:
            {% for reason in diagnosis_results.reasons %}
              - {{ reason }}
            {% endfor %}
            조치 권고:
            - Sendmail 또는 Postfix 서비스가 사용 중이며 취약한 버전으로 진단되었습니다.
            - 해당 OS 벤더사의 최신 보안 패치를 적용하거나, 취약점이 없는 버전으로 업그레이드를 검토하십시오.
            - 패치 적용 전에는 시스템 영향도를 파악하여 충분한 테스트를 수행해야 합니다.
          {% else %}
            Sendmail 및 Postfix 서비스가 모두 양호한 상태입니다 (사용하지 않거나, 취약하지 않은 버전입니다).
          {% endif %}
      when: diagnosis_results is defined

    # --- 2. 조치 섹션 시작 (정보 제공 및 권고) ---
    - name: 조치 안내 메시지
      ansible.builtin.debug:
        msg: |
          Sendmail 또는 Postfix 버전 점검이 완료되었습니다.
          자동 패치는 수행되지 않습니다. 위의 진단 결과와 조치 권고를 참조하여 수동으로 보안 패치 또는 버전 업그레이드를 진행하십시오.
      when: not ansible_check_mode # --check 모드가 아닐 때만 출력
