---
- name: 진단 및 조치 - Sendmail 버전 점검
  hosts: target_servers
  become: yes
  gather_facts: yes

  # 1. 변수 정의
  vars:
    # --- 보고서 관련 ---
    playbook_name: "1_1_30_mail_version_check.yml"
    remediation_tasks_performed: []

  tasks:
    # 2. 진단
    # 진단 2.1: Sendmail 프로세스 실행 여부 확인
    - name: Sendmail 프로세스 실행 여부 확인
      ansible.builtin.shell: "ps -ef | grep '[s]endmail'"
      register: sendmail_process_check
      changed_when: false
      failed_when: false

    # Sendmail이 실행 중일 경우 버전 정보 수집
    - name: Sendmail 버전 정보 수집
      ansible.builtin.shell: "grep 'DZ' /etc/mail/sendmail.cf | head -n 1"
      register: sendmail_version_check
      changed_when: false
      failed_when: false
      when: sendmail_process_check.rc == 0

    # 진단 2.2: Postfix 프로세스 실행 여부 확인
    - name: Postfix 서비스 상태 확인
      ansible.builtin.systemd:
        name: "postfix"
      register: postfix_service_check
      ignore_errors: true

    # Postfix가 실행 중일 경우 버전 정보 수집
    - name: Postfix 버전 정보 수집
      ansible.builtin.command: "postconf -d mail_version"
      register: postfix_version_check
      changed_when: false
      failed_when: false
      when: postfix_service_check.status.ActiveState == 'active'

    # 진단 결과에 따라 취약 여부 변수 설정
    # 개별 메일 서비스 실행 여부 판단
    - name: 개별 메일 서비스 실행 여부 판단
      ansible.builtin.set_fact:
        is_sendmail_running: "{{ sendmail_process_check.rc == 0 }}"
        is_postfix_running: "{{ postfix_service_check.status.ActiveState == 'active' if 'status' in postfix_service_check else false }}"

    # 최종 취약 여부 종합 판단
    - name: 최종 취약 여부 종합 판단
      ansible.builtin.set_fact:
        is_vulnerable: "{{ is_sendmail_running or is_postfix_running }}"
        sendmail_version: "{{ sendmail_version_check.stdout | default('N/A') if sendmail_version_check is defined else 'N/A' }}"
        postfix_version: "{{ postfix_version_check.stdout | default('N/A') if postfix_version_check is defined else 'N/A' }}"
        report_timestamp: "{{ ansible_date_time.iso8601 }}"

    # 3. 진단 결과 보고
    # 진단 결과를 콘솔에 간단히 출력
    - name: 진단 결과 콘솔 출력
      ansible.builtin.debug:
        msg: "진단결과: {% if is_vulnerable %}취약 (Sendmail 또는 Postfix 서비스 실행 중){% else %}양호{% endif %}"

    # 초기 JSON 보고서 데이터 생성 및 저장
    - name: 초기 JSON 보고서 생성 및 저장
      ansible.builtin.copy:
        content: |
          {{
            {
              "playbook_name": playbook_name,
              "task_description": "Sendmail 버전 점검",
              "diagnosis_result": "취약" if is_vulnerable else "양호",
              "is_vulnerable": is_vulnerable,
              "timestamp": report_timestamp,
              "hostname": inventory_hostname,
              "vulnerability_details": {
                "reason": "Sendmail 또는 Postfix 서비스가 실행 중입니다. 최신 보안 패치가 적용되었는지 확인이 필요합니다." if is_vulnerable else "점검 대상 메일 서비스(Sendmail, Postfix)가 실행 중이지 않습니다.",
                "running_services": {
                  "sendmail": {
                    "is_running": is_sendmail_running,
                    "version_info": sendmail_version
                  },
                  "postfix": {
                    "is_running": is_postfix_running,
                    "version_info": postfix_version
                  }
                }
              }
            } | to_nice_json
          }}
        dest: "{{ result_json_path }}"
        mode: '0644'
      delegate_to: localhost
      become: false

    # 4. 조치 (수동 조치 안내)
    # 자동으로 패치를 적용하지 않고, 사용자에게 필요한 조치를 안내
    - name: 필요한 수동 조치 안내
      ansible.builtin.debug:
        msg:
          - "보안 점검 결과: 메일 서버(Sendmail/Postfix)가 실행 중입니다."
          - "Sendmail 실행 여부: {{ is_sendmail_running }}, 버전 정보: {{ sendmail_version }}"
          - "Postfix 실행 여부: {{ is_postfix_running }}, 버전 정보: {{ postfix_version }}"
          - "조치 권고:"
          - "  - 실행 중인 서비스가 반드시 필요한지 확인하십시오."
          - "  - 불필요한 서비스라면 'sudo systemctl disable --now <서비스이름>' 명령어로 중지하십시오."
          - "  - 필요한 서비스라면, 'sudo apt-get update && sudo apt-get upgrade' 등으로 최신 보안 패치를 적용하십시오."
      when: is_vulnerable

    # 5. 조치 결과 보고
    # 수행된 조치 작업 기록 (자동 조치가 없으므로 '수동 조치 필요'로 기록)
    - name: 수행된 조치 작업 기록
      ansible.builtin.set_fact:
        remediation_done: false
        remediation_tasks_performed: "{{ ['수동 조치 필요'] if is_vulnerable else [] }}"
      when: is_vulnerable

    # 최종 JSON 보고서에 조치 결과 추가 및 저장
    - name: 최종 JSON 보고서에 조치 결과 추가 및 저장
      ansible.builtin.copy:
        content: |
          {{
            (lookup('file', result_json_path) | from_json) | combine({
              'remediation_applied': remediation_done | default(false),
              'remediation_result': '수동 조치 필요' if is_vulnerable else '조치 불필요',
              'remediation_timestamp': report_timestamp,
              'remediation_tasks_performed': remediation_tasks_performed | default([])
            }, recursive=True) | to_nice_json
          }}
        dest: "{{ result_json_path }}"
        mode: '0644'
      delegate_to: localhost
      become: false
      when: not ansible_check_mode and is_vulnerable