---
- name: 진단 및 조치 - root 계정 PATH 환경변수 보안 설정
  hosts: target_servers
  become: yes
  gather_facts: yes

  # 1. 변수 정의
  vars:
    # PATH를 검사하고 수정할 root 관련 설정 파일 목록
    root_path_config_files:
      - "/etc/profile"
      - "/root/.bashrc"
      - "/root/.profile"
    
    # 보고서 관련 변수
    remediation_tasks_performed: []

  tasks:
    # 2. 진단
    # root의 실제 로그인 셸 환경의 PATH에 '.' 또는 '::'가 포함되어 있는지 확인
    - name: root 계정의 PATH 환경변수 보안 검사
      ansible.builtin.shell: "bash -l -c 'echo $PATH' | grep -Eq '(^|:)\\.(:|$)|::'"
      register: path_check
      changed_when: false
      failed_when: false # rc=1 (패턴 없음, 양호)은 오류가 아님

    # 진단 결과에 따라 취약 여부 변수 설정
    - name: 취약 여부 종합 판단
      ansible.builtin.set_fact:
        is_vulnerable: "{{ path_check.rc == 0 }}"
        vulnerable_path: "{{ path_check.stdout | default('N/A') }}"
        report_timestamp: "{{ ansible_date_time.iso8601 }}"

    # 3. 진단 결과 보고 (초기)
    # 진단 결과를 콘솔에 간단히 출력
    - name: 진단 결과 콘솔 출력
      ansible.builtin.debug:
        msg: "진단결과: {% if is_vulnerable %}취약 (PATH에 '.' 또는 빈 경로 포함){% else %}양호{% endif %}"

    # 초기 JSON 보고서 데이터 생성
    - name: 초기 JSON 보고서 생성
      ansible.builtin.set_fact:
        current_report_data:
          playbook_name: "1_1_6_root_path_security.yml"
          task_description: "root 계정 PATH 환경변수 보안 설정"
          diagnosis_result: "{% if is_vulnerable %}취약{% else %}양호{% endif %}"
          is_vulnerable: "{{ is_vulnerable }}"
          timestamp: "{{ report_timestamp }}"
          hostname: "{{ inventory_hostname }}"
          vulnerability_details:
            reason: "{% if is_vulnerable %}root 계정의 PATH 환경변수에 현재 디렉터리(.)가 포함되어 보안상 취약합니다.{% else %}root 계정의 PATH 환경변수가 안전하게 설정되어 있습니다.{% endif %}"
            current_path: "{{ vulnerable_path }}"
          remediation_tasks_performed: []

    # 초기 JSON 보고서 파일로 저장
    - name: 초기 JSON 보고서 파일 저장
      ansible.builtin.copy:
        content: "{{ current_report_data | to_nice_json }}"
        dest: "{{ result_json_path }}"
        mode: '0644'
      delegate_to: localhost
      become: false

    # 4. 조치
    # 각 설정 파일에 대해 여러 비보안 패턴을 순차적으로 제거
    - name: 설정 파일에서 비보안 PATH 패턴 순차적 제거
      ansible.builtin.replace:
        path: "{{ item[0] }}"
        regexp: "{{ item[1].regex }}"
        replace: "{{ item[1].repl }}"
        backup: yes
      with_nested:
        - "{{ root_path_config_files }}"
        - - { regex: ':\.:',  repl: ':' }
          - { regex: '=\.:',  repl: '=' }
          - { regex: ':\.$',  repl: '' }
          - { regex: '::+',   repl: ':' }
          - { regex: ':$',    repl: '' }
          - { regex: '^PATH=:', repl: 'PATH=' }
      register: path_cleanup
      when: is_vulnerable

    # 5. 조치 결과 보고
    # 수행된 조치 작업 기록
    - name: 수행된 조치 작업 기록
      ansible.builtin.set_fact:
        remediation_done: "{{ path_cleanup.results | selectattr('changed', 'equalto', true) | list | length > 0 }}"
        remediation_tasks_performed: "{{ ['PATH 설정 파일 수정'] if (path_cleanup.results | selectattr('changed', 'equalto', true) | list | length > 0) else [] }}"
      when: is_vulnerable

    # 조치 결과를 콘솔에 출력
    - name: 조치 결과 콘솔 출력
      ansible.builtin.debug:
        msg: "총괄 조치 결과: {% if remediation_done | default(false) %}조치 완료{% elif not is_vulnerable %}조치 불필요 (양호){% else %}조치 실패{% endif %}"
      when: not ansible_check_mode

    # JSON 보고서에 조치 결과 추가
    - name: JSON 보고서에 조치 결과 추가
      ansible.builtin.set_fact:
        current_report_data: "{{ (lookup('file', result_json_path) | from_json) | combine({
            'remediation_applied': remediation_done | default(false),
            'remediation_result': '조치 완료' if (remediation_done | default(false)) else ('조치 불필요' if not is_vulnerable else '조치 실패'),
            'remediation_timestamp': report_timestamp,
            'remediation_tasks_performed': remediation_tasks_performed
          }, recursive=True) }}"
      when: not ansible_check_mode and is_vulnerable

    # 최종 JSON 보고서 파일 덮어쓰기
    - name: 최종 JSON 보고서 파일 저장
      ansible.builtin.copy:
        content: "{{ current_report_data | to_nice_json }}"
        dest: "{{ result_json_path }}"
        mode: '0644'
      when: not ansible_check_mode and is_vulnerable
      delegate_to: localhost
      become: false