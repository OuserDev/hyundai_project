---
- name: 진단 및 조치 - 최신 보안패치 및 벤더 권고사항 적용
  hosts: target_servers
  become: yes
  gather_facts: yes

  # 1. 변수 정의
  vars:
    playbook_name: "1_1_35_security_patch_check.yml"
    remediation_tasks_performed: []

  tasks:
    # 2. 진단
    # OS 계열에 따라 다른 방식으로 보안 업데이트가 있는지 확인
    - name: 적용 가능한 보안 업데이트 확인 (Debian/Ubuntu)
      ansible.builtin.shell: "apt-get -s -o Debug::NoLocking=true upgrade | grep ^Inst | grep -i security"
      register: security_updates_check_debian
      changed_when: false
      failed_when: false
      when: ansible_facts['os_family'] == "Debian"

    - name: 적용 가능한 보안 업데이트 확인 (RedHat/CentOS)
      ansible.builtin.shell: "yum check-update --security -q"
      register: security_updates_check_rhel
      changed_when: false
      failed_when: false # rc=100은 업데이트가 있다는 의미이므로 실패가 아님
      ignore_errors: true # check-update는 업데이트가 없으면 rc=0, 있으면 rc=100을 반환
      when: ansible_facts['os_family'] == "RedHat"

    # 진단 결과에 따라 취약 여부 변수 설정
    # OS 계열별 취약 여부 판단
    - name: OS 계열별 취약 여부 판단
      ansible.builtin.set_fact:
        # .rc에 접근하기 전에 'rc' 키가 있는지 먼저 확인합니다.
        is_debian_vuln: "{{ security_updates_check_debian.rc == 0 if 'rc' in security_updates_check_debian else false }}"
        is_rhel_vuln: "{{ security_updates_check_rhel.rc == 100 if 'rc' in security_updates_check_rhel else false }}"

    # 최종 취약 여부 종합 판단
    - name: 최종 취약 여부 종합 판단
      ansible.builtin.set_fact:
        is_vulnerable: "{{ is_debian_vuln or is_rhel_vuln }}"
        pending_updates_list: >-
          {{ security_updates_check_debian.stdout_lines if is_debian_vuln else
            (security_updates_check_rhel.stdout_lines if is_rhel_vuln else []) }}
        report_timestamp: "{{ ansible_date_time.iso8601 }}"

    # 3. 진단 결과 보고
    # 진단 결과를 콘솔에 간단히 출력
    - name: 진단 결과 콘솔 출력
      ansible.builtin.debug:
        msg: "진단결과: {% if is_vulnerable %}취약 (대기 중인 보안 업데이트 발견){% else %}양호 (최신 상태){% endif %}"

    # 초기 JSON 보고서 데이터 생성 및 저장
    - name: 초기 JSON 보고서 생성 및 저장
      ansible.builtin.copy:
        content: |
          {{
            {
              "playbook_name": playbook_name,
              "task_description": "최신 보안패치 및 벤더 권고사항 적용",
              "diagnosis_result": "취약" if is_vulnerable else "양호",
              "is_vulnerable": is_vulnerable,
              "timestamp": report_timestamp,
              "hostname": inventory_hostname,
              "vulnerability_details": {
                "reason": "시스템에 적용되지 않은 보안 업데이트가 존재합니다." if is_vulnerable else "시스템이 최신 보안 상태를 유지하고 있습니다.",
                "pending_security_updates": pending_updates_list
              }
            } | to_nice_json
          }}
        dest: "{{ result_json_path }}"
        mode: '0644'
      delegate_to: localhost
      become: false

    # 4. 조치 (수동 조치 안내)
    - name: 필요한 수동 조치 안내
      ansible.builtin.debug:
        msg:
          - "보안 취약점이 발견되었습니다. 시스템에 적용되지 않은 보안 패치가 있습니다."
          - "업데이트 필요한 패키지 목록:"
          - "{{ pending_updates_list }}"
          - "조치 권고:"
          - "  - 아래 명령어를 사용하여 시스템을 업데이트하십시오."
          - "  - (Debian/Ubuntu): sudo apt-get update && sudo apt-get upgrade"
          - "  - (RedHat/CentOS): sudo yum update --security"
          - "  - 중요: 업데이트 적용 전 시스템 스냅샷 생성 및 충분한 테스트를 권고합니다."
      when: is_vulnerable

    # 5. 조치 결과 보고
    - name: 수행된 조치 작업 기록
      ansible.builtin.set_fact:
        remediation_done: false
        remediation_tasks_performed: "{{ ['수동 조치 필요'] if is_vulnerable else [] }}"
      when: is_vulnerable

    - name: 최종 JSON 보고서에 조치 결과 추가 및 저장
      ansible.builtin.copy:
        content: |
          {{
            (lookup('file', result_json_path) | from_json) | combine({
              'remediation_applied': remediation_done | default(false),
              'remediation_result': '수동 조치 필요' if is_vulnerable else '조치 불필요',
              'remediation_timestamp': report_timestamp,
              'remediation_tasks_performed': remediation_tasks_performed | default([])
            }, recursive=True) | to_nice_json
          }}
        dest: "{{ result_json_path }}"
        mode: '0644'
      delegate_to: localhost
      become: false
      when: not ansible_check_mode and is_vulnerable