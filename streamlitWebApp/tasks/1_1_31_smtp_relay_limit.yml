---
- name: 진단 및 조치 - 스팸 메일 릴레이 제한
  hosts: target_servers
  become: yes
  gather_facts: yes

  # 1. 변수 정의
  vars:
    sendmail_config: "/etc/mail/sendmail.cf"
    postfix_config: "/etc/postfix/main.cf"
    playbook_name: "1_1_31_smtp_relay_limit.yml"
    remediation_tasks_performed: []

  tasks:
    # 2. 진단
    # 진단 2.1: Sendmail 프로세스 및 설정 확인
    - name: Sendmail 프로세스 실행 여부 확인
      ansible.builtin.shell: "ps -ef | grep '[s]endmail'"
      register: sendmail_process_check
      changed_when: false
      failed_when: false

    - name: Sendmail 릴레이 차단 규칙 확인
      ansible.builtin.shell: "grep -qE '^R\\$\\*.*Relaying denied' {{ sendmail_config }}"
      register: sendmail_config_check
      changed_when: false
      failed_when: false
      when: sendmail_process_check.rc == 0

    # 진단 2.2: Postfix 프로세스 및 설정 확인
    - name: Postfix 서비스 상태 확인
      ansible.builtin.systemd:
        name: "postfix"
      register: postfix_service_check
      ignore_errors: true

    - name: Postfix 릴레이 제한 규칙 확인
      ansible.builtin.command: "postconf -h smtpd_relay_restrictions"
      register: postfix_config_check
      changed_when: false
      failed_when: false
      when: postfix_service_check.status.ActiveState == 'active'

    # 개별 취약점 여부 판단
    - name: 개별 메일 서버 취약 여부 판단
      ansible.builtin.set_fact:
        # Sendmail이 실행 중인데, 기본 릴레이 차단 규칙이 없으면 취약
        is_sendmail_vuln: "{{ sendmail_process_check.rc == 0 and sendmail_config_check.rc != 0 }}"
        # Postfix가 실행 중인데, reject_unauth_destination 규칙이 없으면 취약
        is_postfix_vuln: >-
          {{ (postfix_service_check.status.ActiveState == 'active') and
             ('reject_unauth_destination' not in postfix_config_check.stdout) }}
      vars:
        # Postfix 2.10 이전 버전의 기본값을 고려
        default_relay_restrictions: "permit_mynetworks, permit_sasl_authenticated, defer_unauth_destination"

    # 최종 취약 여부 종합 판단
    - name: 최종 취약 여부 종합 판단
      ansible.builtin.set_fact:
        is_vulnerable: "{{ is_sendmail_vuln or is_postfix_vuln }}"
        report_timestamp: "{{ ansible_date_time.iso8601 }}"

    # 3. 진단 결과 보고
    - name: 진단 결과 콘솔 출력
      ansible.builtin.debug:
        msg: "진단결과: {% if is_vulnerable %}취약 (SMTP 릴레이 제한 미설정){% else %}양호{% endif %}"

    - name: 초기 JSON 보고서 생성 및 저장
      ansible.builtin.copy:
        content: |
          {{
            {
              "playbook_name": playbook_name,
              "task_description": "스팸 메일 릴레이 제한",
              "diagnosis_result": "취약" if is_vulnerable else "양호",
              "is_vulnerable": is_vulnerable,
              "timestamp": report_timestamp,
              "hostname": inventory_hostname,
              "vulnerability_details": {
                "reason": "Sendmail 또는 Postfix의 SMTP 릴레이 제한이 부적절하여 스팸 중계지로 악용될 수 있습니다." if is_vulnerable else "메일 서비스가 실행 중이지 않거나, 릴레이 제한이 올바르게 설정되어 있습니다.",
                "details": {
                  "sendmail_vulnerable": is_sendmail_vuln,
                  "postfix_vulnerable": is_postfix_vuln,
                  "postfix_current_restrictions": postfix_config_check.stdout | default('N/A')
                }
              }
            } | to_nice_json
          }}
        dest: "{{ result_json_path }}"
        mode: '0644'
      delegate_to: localhost
      become: false

    # 4. 조치 (수동 조치 안내)
    - name: 필요한 수동 조치 안내
      ansible.builtin.debug:
        msg:
          - "보안 취약점이 발견되었습니다. 메일 서버의 릴레이 설정을 수동으로 점검해야 합니다."
          - "{% if is_sendmail_vuln %}Sendmail: /etc/mail/sendmail.cf 파일에서 릴레이 차단(Relaying denied) 규칙이 활성화되어 있는지 확인하십시오.{% endif %}"
          - "{% if is_postfix_vuln %}Postfix: /etc/postfix/main.cf 파일의 smtpd_relay_restrictions 설정에 'reject_unauth_destination'을 추가하여 허가되지 않은 릴레이를 차단하십시오.{% endif %}"
      when: is_vulnerable

    # 5. 조치 결과 보고
    - name: 수행된 조치 작업 기록
      ansible.builtin.set_fact:
        remediation_done: false
        remediation_tasks_performed: "{{ ['수동 조치 필요'] if is_vulnerable else [] }}"
      when: is_vulnerable

    - name: 최종 JSON 보고서에 조치 결과 추가 및 저장
      ansible.builtin.copy:
        content: |
          {{
            (lookup('file', result_json_path) | from_json) | combine({
              'remediation_applied': remediation_done | default(false),
              'remediation_result': '수동 조치 필요' if is_vulnerable else '조치 불필요',
              'remediation_timestamp': report_timestamp,
              'remediation_tasks_performed': remediation_tasks_performed | default([])
            }, recursive=True) | to_nice_json
          }}
        dest: "{{ result_json_path }}"
        mode: '0644'
      delegate_to: localhost
      become: false
      when: not ansible_check_mode and is_vulnerable